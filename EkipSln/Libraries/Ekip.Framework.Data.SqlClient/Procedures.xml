<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type='text/xsl' href="scriptsql.xsl"?>
<root xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<database includeDrop="true">EkipDev</database>
<procedures>
<procedure owner="dbo" name="sp_DropAllProcedures">
<comment>-- Drops all existing netTiers stored procedures</comment>
<parameters/>

<body><![CDATA[
BEGIN
DECLARE @procedureName SYSNAME
DECLARE c CURSOR FOR
SELECT '[' + sc.name + '].[' + so.name + ']' FROM sysobjects so INNER JOIN sys.schemas sc ON sc.schema_id = so.uid WHERE type = 'P' AND objectproperty(id, 'IsMSShipped') = 0
AND so.name LIKE 'sp_%' 
AND so.name <> 'Seance_DeleteBySeanceID'
AND so.name <> 'Seance_DeleteByClientID'
AND so.name <> 'Town_GetByProvinceId'
AND so.name <> 'Street_GetByNeighborhoodId'
AND so.name <> 'ClientAddress_GetCurrentAddress'
AND so.name <> 'CalendarAge_GetByYearAndMonth'
AND so.name <> 'Client_FindByReason_FirstDate_BirthDate'
AND so.name <> 'Client_AdvisorReport'
AND so.name <> 'Client_GetAllFirstContactYears'
AND so.name <> 'Client_GetByFirstContactYears'
AND so.name <> 'Client_GetAllBirthDateYears'
AND so.name <> 'Client_GetFirst'
AND so.name <> 'Client_GetFileNumbers'
AND so.name <> 'Client_GetLast'
OPEN c
FETCH NEXT FROM c INTO @procedureName
WHILE @@FETCH_STATUS = 0
BEGIN
EXEC('DROP PROC ' + @procedureName)
FETCH NEXT FROM c INTO @procedureName
END
CLOSE c
DEALLOCATE c
END
GO

EXEC dbo.sp_DropAllProcedures
GO
]]></body>
</procedure>
		
		<procedure owner="dbo" name="sp_Advisor_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Advisor table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AdvisorId],
					[TitleId],
					[FullName],
					[Email],
					[Phone],
					[Gsm],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Advisor]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Advisor_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Advisor table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AdvisorId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AdvisorId]'
				SET @SQL = @SQL + ', [TitleId]'
				SET @SQL = @SQL + ', [FullName]'
				SET @SQL = @SQL + ', [Email]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [Gsm]'
				SET @SQL = @SQL + ', [Notes]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Advisor]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AdvisorId],'
				SET @SQL = @SQL + ' [TitleId],'
				SET @SQL = @SQL + ' [FullName],'
				SET @SQL = @SQL + ' [Email],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [Gsm],'
				SET @SQL = @SQL + ' [Notes],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Advisor]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Advisor_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Advisor table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvisorId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TitleId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Gsm" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Advisor]
					(
					[TitleId]
					,[FullName]
					,[Email]
					,[Phone]
					,[Gsm]
					,[Notes]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@TitleId
					,@FullName
					,@Email
					,@Phone
					,@Gsm
					,@Notes
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @AdvisorId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Advisor_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Advisor table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvisorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TitleId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Gsm" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Advisor]
				SET
					[TitleId] = @TitleId
					,[FullName] = @FullName
					,[Email] = @Email
					,[Phone] = @Phone
					,[Gsm] = @Gsm
					,[Notes] = @Notes
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[AdvisorId] = @AdvisorId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Advisor_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Advisor table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvisorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Advisor] WITH (ROWLOCK) 
				WHERE
					[AdvisorId] = @AdvisorId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Advisor_GetByAdvisorId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Advisor table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AdvisorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AdvisorId],
					[TitleId],
					[FullName],
					[Email],
					[Phone],
					[Gsm],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Advisor]
				WHERE
					[AdvisorId] = @AdvisorId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Advisor_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Advisor table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvisorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TitleId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Phone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Gsm" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AdvisorId]
	, [TitleId]
	, [FullName]
	, [Email]
	, [Phone]
	, [Gsm]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Advisor]
    WHERE 
	 ([AdvisorId] = @AdvisorId OR @AdvisorId IS NULL)
	AND ([TitleId] = @TitleId OR @TitleId IS NULL)
	AND ([FullName] = @FullName OR @FullName IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([Phone] = @Phone OR @Phone IS NULL)
	AND ([Gsm] = @Gsm OR @Gsm IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AdvisorId]
	, [TitleId]
	, [FullName]
	, [Email]
	, [Phone]
	, [Gsm]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Advisor]
    WHERE 
	 ([AdvisorId] = @AdvisorId AND @AdvisorId is not null)
	OR ([TitleId] = @TitleId AND @TitleId is not null)
	OR ([FullName] = @FullName AND @FullName is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([Gsm] = @Gsm AND @Gsm is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Advisor_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Advisor table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [AdvisorId]
					, [TitleId]
					, [FullName]
					, [Email]
					, [Phone]
					, [Gsm]
					, [Notes]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Advisor] {0}
				)
				SELECT
				       [AdvisorId],
				       [TitleId],
				       [FullName],
				       [Email],
				       [Phone],
				       [Gsm],
				       [Notes],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Advisor] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_SeanceQuestion_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the SeanceQuestion table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[QuestionId],
					[QuestionRef],
					[QuestionName],
					[LineNumber],
					[Status]
				FROM
					[dbo].[SeanceQuestion]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_SeanceQuestion_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the SeanceQuestion table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[QuestionId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [QuestionId]'
				SET @SQL = @SQL + ', [QuestionRef]'
				SET @SQL = @SQL + ', [QuestionName]'
				SET @SQL = @SQL + ', [LineNumber]'
				SET @SQL = @SQL + ', [Status]'
				SET @SQL = @SQL + ' FROM [dbo].[SeanceQuestion]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [QuestionId],'
				SET @SQL = @SQL + ' [QuestionRef],'
				SET @SQL = @SQL + ' [QuestionName],'
				SET @SQL = @SQL + ' [LineNumber],'
				SET @SQL = @SQL + ' [Status]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SeanceQuestion]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_SeanceQuestion_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the SeanceQuestion table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionRef" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@QuestionName" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SeanceQuestion]
					(
					[QuestionRef]
					,[QuestionName]
					,[LineNumber]
					,[Status]
					)
				VALUES
					(
					@QuestionRef
					,@QuestionName
					,@LineNumber
					,@Status
					)
				-- Get the identity value
				SET @QuestionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestion_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the SeanceQuestion table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionRef" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@QuestionName" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SeanceQuestion]
				SET
					[QuestionRef] = @QuestionRef
					,[QuestionName] = @QuestionName
					,[LineNumber] = @LineNumber
					,[Status] = @Status
				WHERE
[QuestionId] = @QuestionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestion_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the SeanceQuestion table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SeanceQuestion] WITH (ROWLOCK) 
				WHERE
					[QuestionId] = @QuestionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestion_GetByQuestionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceQuestion table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[QuestionId],
					[QuestionRef],
					[QuestionName],
					[LineNumber],
					[Status]
				FROM
					[dbo].[SeanceQuestion]
				WHERE
					[QuestionId] = @QuestionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestion_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the SeanceQuestion table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionRef" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@QuestionName" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [QuestionId]
	, [QuestionRef]
	, [QuestionName]
	, [LineNumber]
	, [Status]
    FROM
	[dbo].[SeanceQuestion]
    WHERE 
	 ([QuestionId] = @QuestionId OR @QuestionId IS NULL)
	AND ([QuestionRef] = @QuestionRef OR @QuestionRef IS NULL)
	AND ([QuestionName] = @QuestionName OR @QuestionName IS NULL)
	AND ([LineNumber] = @LineNumber OR @LineNumber IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [QuestionId]
	, [QuestionRef]
	, [QuestionName]
	, [LineNumber]
	, [Status]
    FROM
	[dbo].[SeanceQuestion]
    WHERE 
	 ([QuestionId] = @QuestionId AND @QuestionId is not null)
	OR ([QuestionRef] = @QuestionRef AND @QuestionRef is not null)
	OR ([QuestionName] = @QuestionName AND @QuestionName is not null)
	OR ([LineNumber] = @LineNumber AND @LineNumber is not null)
	OR ([Status] = @Status AND @Status is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_SeanceQuestion_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the SeanceQuestion table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [QuestionId]
					, [QuestionRef]
					, [QuestionName]
					, [LineNumber]
					, [Status]
					FROM [dbo].[SeanceQuestion] {0}
				)
				SELECT
				       [QuestionId],
				       [QuestionRef],
				       [QuestionName],
				       [LineNumber],
				       [Status]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SeanceQuestion] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Seance_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Seance table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SeanceId],
					[ClientId],
					[AdvisorId],
					[SeanceDate],
					[SeanceTime],
					[Notes],
					[SeanceStatusId],
					[CreateDate],
					[UpdateDate],
					[CreatedUserId],
					[UpdatedUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Seance]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Seance_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Seance table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SeanceId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SeanceId]'
				SET @SQL = @SQL + ', [ClientId]'
				SET @SQL = @SQL + ', [AdvisorId]'
				SET @SQL = @SQL + ', [SeanceDate]'
				SET @SQL = @SQL + ', [SeanceTime]'
				SET @SQL = @SQL + ', [Notes]'
				SET @SQL = @SQL + ', [SeanceStatusId]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreatedUserId]'
				SET @SQL = @SQL + ', [UpdatedUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Seance]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SeanceId],'
				SET @SQL = @SQL + ' [ClientId],'
				SET @SQL = @SQL + ' [AdvisorId],'
				SET @SQL = @SQL + ' [SeanceDate],'
				SET @SQL = @SQL + ' [SeanceTime],'
				SET @SQL = @SQL + ' [Notes],'
				SET @SQL = @SQL + ' [SeanceStatusId],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreatedUserId],'
				SET @SQL = @SQL + ' [UpdatedUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Seance]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Seance_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Seance table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SeanceId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvisorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@Notes" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SeanceStatusId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdatedUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Seance]
					(
					[ClientId]
					,[AdvisorId]
					,[SeanceDate]
					,[SeanceTime]
					,[Notes]
					,[SeanceStatusId]
					,[CreateDate]
					,[UpdateDate]
					,[CreatedUserId]
					,[UpdatedUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@ClientId
					,@AdvisorId
					,@SeanceDate
					,@SeanceTime
					,@Notes
					,@SeanceStatusId
					,@CreateDate
					,@UpdateDate
					,@CreatedUserId
					,@UpdatedUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @SeanceId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Seance_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Seance table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdvisorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@Notes" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SeanceStatusId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreatedUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdatedUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Seance]
				SET
					[ClientId] = @ClientId
					,[AdvisorId] = @AdvisorId
					,[SeanceDate] = @SeanceDate
					,[SeanceTime] = @SeanceTime
					,[Notes] = @Notes
					,[SeanceStatusId] = @SeanceStatusId
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreatedUserId] = @CreatedUserId
					,[UpdatedUserId] = @UpdatedUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[SeanceId] = @SeanceId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Seance_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Seance table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Seance] WITH (ROWLOCK) 
				WHERE
					[SeanceId] = @SeanceId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Seance_GetByClientId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Seance table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SeanceId],
					[ClientId],
					[AdvisorId],
					[SeanceDate],
					[SeanceTime],
					[Notes],
					[SeanceStatusId],
					[CreateDate],
					[UpdateDate],
					[CreatedUserId],
					[UpdatedUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Seance]
				WHERE
					[ClientId] = @ClientId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Seance_GetBySeanceId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Seance table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SeanceId],
					[ClientId],
					[AdvisorId],
					[SeanceDate],
					[SeanceTime],
					[Notes],
					[SeanceStatusId],
					[CreateDate],
					[UpdateDate],
					[CreatedUserId],
					[UpdatedUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Seance]
				WHERE
					[SeanceId] = @SeanceId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Seance_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Seance table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdvisorId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SeanceDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SeanceTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@Notes" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SeanceStatusId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreatedUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdatedUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SeanceId]
	, [ClientId]
	, [AdvisorId]
	, [SeanceDate]
	, [SeanceTime]
	, [Notes]
	, [SeanceStatusId]
	, [CreateDate]
	, [UpdateDate]
	, [CreatedUserId]
	, [UpdatedUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Seance]
    WHERE 
	 ([SeanceId] = @SeanceId OR @SeanceId IS NULL)
	AND ([ClientId] = @ClientId OR @ClientId IS NULL)
	AND ([AdvisorId] = @AdvisorId OR @AdvisorId IS NULL)
	AND ([SeanceDate] = @SeanceDate OR @SeanceDate IS NULL)
	AND ([SeanceTime] = @SeanceTime OR @SeanceTime IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([SeanceStatusId] = @SeanceStatusId OR @SeanceStatusId IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreatedUserId] = @CreatedUserId OR @CreatedUserId IS NULL)
	AND ([UpdatedUserId] = @UpdatedUserId OR @UpdatedUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SeanceId]
	, [ClientId]
	, [AdvisorId]
	, [SeanceDate]
	, [SeanceTime]
	, [Notes]
	, [SeanceStatusId]
	, [CreateDate]
	, [UpdateDate]
	, [CreatedUserId]
	, [UpdatedUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Seance]
    WHERE 
	 ([SeanceId] = @SeanceId AND @SeanceId is not null)
	OR ([ClientId] = @ClientId AND @ClientId is not null)
	OR ([AdvisorId] = @AdvisorId AND @AdvisorId is not null)
	OR ([SeanceDate] = @SeanceDate AND @SeanceDate is not null)
	OR ([SeanceTime] = @SeanceTime AND @SeanceTime is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([SeanceStatusId] = @SeanceStatusId AND @SeanceStatusId is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreatedUserId] = @CreatedUserId AND @CreatedUserId is not null)
	OR ([UpdatedUserId] = @UpdatedUserId AND @UpdatedUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Seance_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Seance table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [SeanceId]
					, [ClientId]
					, [AdvisorId]
					, [SeanceDate]
					, [SeanceTime]
					, [Notes]
					, [SeanceStatusId]
					, [CreateDate]
					, [UpdateDate]
					, [CreatedUserId]
					, [UpdatedUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Seance] {0}
				)
				SELECT
				       [SeanceId],
				       [ClientId],
				       [AdvisorId],
				       [SeanceDate],
				       [SeanceTime],
				       [Notes],
				       [SeanceStatusId],
				       [CreateDate],
				       [UpdateDate],
				       [CreatedUserId],
				       [UpdatedUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Seance] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Seance_DeleteBySeanceID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
on WHERE SeanceID = @SeanceId
		DELETE FROM Seance WHERE SeanceID = @SeanceId
	COMMIT TRAN t1;
END TRY

BEGIN CATCH
	ROLLBACK TRAN t1;
END CATCH



			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Seance_DeleteByClientID"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@ClientID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
on WHERE SeanceID IN(SELECT SeanceID FROM Seance WHERE ClientID = @ClientID)
		DELETE FROM Seance WHERE ClientID = @ClientID
	COMMIT TRAN t1;
END TRY

BEGIN CATCH
	ROLLBACK TRAN t1;
END CATCH


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="sp_School_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the School table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SchoolId],
					[SchoolName],
					[CorparationTypeId],
					[SchoolTypeId],
					[ProvinceId],
					[TownId],
					[Address],
					[Phone],
					[Fax],
					[WebAddress],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[School]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_School_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the School table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SchoolId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SchoolId]'
				SET @SQL = @SQL + ', [SchoolName]'
				SET @SQL = @SQL + ', [CorparationTypeId]'
				SET @SQL = @SQL + ', [SchoolTypeId]'
				SET @SQL = @SQL + ', [ProvinceId]'
				SET @SQL = @SQL + ', [TownId]'
				SET @SQL = @SQL + ', [Address]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [Fax]'
				SET @SQL = @SQL + ', [WebAddress]'
				SET @SQL = @SQL + ', [Notes]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[School]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SchoolId],'
				SET @SQL = @SQL + ' [SchoolName],'
				SET @SQL = @SQL + ' [CorparationTypeId],'
				SET @SQL = @SQL + ' [SchoolTypeId],'
				SET @SQL = @SQL + ' [ProvinceId],'
				SET @SQL = @SQL + ' [TownId],'
				SET @SQL = @SQL + ' [Address],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [Fax],'
				SET @SQL = @SQL + ' [WebAddress],'
				SET @SQL = @SQL + ' [Notes],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[School]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_School_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the School table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SchoolId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CorparationTypeId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolTypeId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Address" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Fax" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@WebAddress" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Notes" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[School]
					(
					[SchoolName]
					,[CorparationTypeId]
					,[SchoolTypeId]
					,[ProvinceId]
					,[TownId]
					,[Address]
					,[Phone]
					,[Fax]
					,[WebAddress]
					,[Notes]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@SchoolName
					,@CorparationTypeId
					,@SchoolTypeId
					,@ProvinceId
					,@TownId
					,@Address
					,@Phone
					,@Fax
					,@WebAddress
					,@Notes
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @SchoolId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_School_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the School table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CorparationTypeId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolTypeId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Address" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Fax" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@WebAddress" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Notes" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[School]
				SET
					[SchoolName] = @SchoolName
					,[CorparationTypeId] = @CorparationTypeId
					,[SchoolTypeId] = @SchoolTypeId
					,[ProvinceId] = @ProvinceId
					,[TownId] = @TownId
					,[Address] = @Address
					,[Phone] = @Phone
					,[Fax] = @Fax
					,[WebAddress] = @WebAddress
					,[Notes] = @Notes
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[SchoolId] = @SchoolId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_School_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the School table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[School] WITH (ROWLOCK) 
				WHERE
					[SchoolId] = @SchoolId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_School_GetBySchoolId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the School table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SchoolId],
					[SchoolName],
					[CorparationTypeId],
					[SchoolTypeId],
					[ProvinceId],
					[TownId],
					[Address],
					[Phone],
					[Fax],
					[WebAddress],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[School]
				WHERE
					[SchoolId] = @SchoolId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_School_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the School table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SchoolName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CorparationTypeId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@SchoolTypeId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Address" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Phone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Fax" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@WebAddress" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Notes" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SchoolId]
	, [SchoolName]
	, [CorparationTypeId]
	, [SchoolTypeId]
	, [ProvinceId]
	, [TownId]
	, [Address]
	, [Phone]
	, [Fax]
	, [WebAddress]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[School]
    WHERE 
	 ([SchoolId] = @SchoolId OR @SchoolId IS NULL)
	AND ([SchoolName] = @SchoolName OR @SchoolName IS NULL)
	AND ([CorparationTypeId] = @CorparationTypeId OR @CorparationTypeId IS NULL)
	AND ([SchoolTypeId] = @SchoolTypeId OR @SchoolTypeId IS NULL)
	AND ([ProvinceId] = @ProvinceId OR @ProvinceId IS NULL)
	AND ([TownId] = @TownId OR @TownId IS NULL)
	AND ([Address] = @Address OR @Address IS NULL)
	AND ([Phone] = @Phone OR @Phone IS NULL)
	AND ([Fax] = @Fax OR @Fax IS NULL)
	AND ([WebAddress] = @WebAddress OR @WebAddress IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SchoolId]
	, [SchoolName]
	, [CorparationTypeId]
	, [SchoolTypeId]
	, [ProvinceId]
	, [TownId]
	, [Address]
	, [Phone]
	, [Fax]
	, [WebAddress]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[School]
    WHERE 
	 ([SchoolId] = @SchoolId AND @SchoolId is not null)
	OR ([SchoolName] = @SchoolName AND @SchoolName is not null)
	OR ([CorparationTypeId] = @CorparationTypeId AND @CorparationTypeId is not null)
	OR ([SchoolTypeId] = @SchoolTypeId AND @SchoolTypeId is not null)
	OR ([ProvinceId] = @ProvinceId AND @ProvinceId is not null)
	OR ([TownId] = @TownId AND @TownId is not null)
	OR ([Address] = @Address AND @Address is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([Fax] = @Fax AND @Fax is not null)
	OR ([WebAddress] = @WebAddress AND @WebAddress is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_School_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the School table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [SchoolId]
					, [SchoolName]
					, [CorparationTypeId]
					, [SchoolTypeId]
					, [ProvinceId]
					, [TownId]
					, [Address]
					, [Phone]
					, [Fax]
					, [WebAddress]
					, [Notes]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[School] {0}
				)
				SELECT
				       [SchoolId],
				       [SchoolName],
				       [CorparationTypeId],
				       [SchoolTypeId],
				       [ProvinceId],
				       [TownId],
				       [Address],
				       [Phone],
				       [Fax],
				       [WebAddress],
				       [Notes],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[School] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Reason_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Reason table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ReasonId],
					[ReasonKey],
					[ReasonValue],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Reason]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Reason_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Reason table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ReasonId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ReasonId]'
				SET @SQL = @SQL + ', [ReasonKey]'
				SET @SQL = @SQL + ', [ReasonValue]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Reason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ReasonId],'
				SET @SQL = @SQL + ' [ReasonKey],'
				SET @SQL = @SQL + ' [ReasonValue],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Reason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Reason_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Reason table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ReasonId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReasonKey" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReasonValue" type="nvarchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Reason]
					(
					[ReasonKey]
					,[ReasonValue]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@ReasonKey
					,@ReasonValue
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @ReasonId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Reason_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Reason table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ReasonId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReasonKey" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReasonValue" type="nvarchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Reason]
				SET
					[ReasonKey] = @ReasonKey
					,[ReasonValue] = @ReasonValue
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[ReasonId] = @ReasonId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Reason_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Reason table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ReasonId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Reason] WITH (ROWLOCK) 
				WHERE
					[ReasonId] = @ReasonId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Reason_GetByReasonKey" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Reason table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ReasonKey" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ReasonId],
					[ReasonKey],
					[ReasonValue],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Reason]
				WHERE
					[ReasonKey] = @ReasonKey
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Reason_GetByReasonId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Reason table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ReasonId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ReasonId],
					[ReasonKey],
					[ReasonValue],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Reason]
				WHERE
					[ReasonId] = @ReasonId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Reason_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Reason table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReasonId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReasonKey" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReasonValue" type="nvarchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ReasonId]
	, [ReasonKey]
	, [ReasonValue]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Reason]
    WHERE 
	 ([ReasonId] = @ReasonId OR @ReasonId IS NULL)
	AND ([ReasonKey] = @ReasonKey OR @ReasonKey IS NULL)
	AND ([ReasonValue] = @ReasonValue OR @ReasonValue IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ReasonId]
	, [ReasonKey]
	, [ReasonValue]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Reason]
    WHERE 
	 ([ReasonId] = @ReasonId AND @ReasonId is not null)
	OR ([ReasonKey] = @ReasonKey AND @ReasonKey is not null)
	OR ([ReasonValue] = @ReasonValue AND @ReasonValue is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Reason_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Reason table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [ReasonId]
					, [ReasonKey]
					, [ReasonValue]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Reason] {0}
				)
				SELECT
				       [ReasonId],
				       [ReasonKey],
				       [ReasonValue],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Reason] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_QuestionFormGroup_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the QuestionFormGroup table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[GroupId],
					[GroupName],
					[LineNumber],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormGroup]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_QuestionFormGroup_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the QuestionFormGroup table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[GroupId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [GroupId]'
				SET @SQL = @SQL + ', [GroupName]'
				SET @SQL = @SQL + ', [LineNumber]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[QuestionFormGroup]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [GroupId],'
				SET @SQL = @SQL + ' [GroupName],'
				SET @SQL = @SQL + ' [LineNumber],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[QuestionFormGroup]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_QuestionFormGroup_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the QuestionFormGroup table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GroupName" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[QuestionFormGroup]
					(
					[GroupName]
					,[LineNumber]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@GroupName
					,@LineNumber
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @GroupId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormGroup_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the QuestionFormGroup table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GroupName" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[QuestionFormGroup]
				SET
					[GroupName] = @GroupName
					,[LineNumber] = @LineNumber
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[GroupId] = @GroupId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormGroup_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the QuestionFormGroup table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[QuestionFormGroup] WITH (ROWLOCK) 
				WHERE
					[GroupId] = @GroupId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormGroup_GetByGroupId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the QuestionFormGroup table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[GroupId],
					[GroupName],
					[LineNumber],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormGroup]
				WHERE
					[GroupId] = @GroupId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormGroup_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the QuestionFormGroup table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GroupName" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [GroupId]
	, [GroupName]
	, [LineNumber]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[QuestionFormGroup]
    WHERE 
	 ([GroupId] = @GroupId OR @GroupId IS NULL)
	AND ([GroupName] = @GroupName OR @GroupName IS NULL)
	AND ([LineNumber] = @LineNumber OR @LineNumber IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [GroupId]
	, [GroupName]
	, [LineNumber]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[QuestionFormGroup]
    WHERE 
	 ([GroupId] = @GroupId AND @GroupId is not null)
	OR ([GroupName] = @GroupName AND @GroupName is not null)
	OR ([LineNumber] = @LineNumber AND @LineNumber is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_QuestionFormGroup_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the QuestionFormGroup table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [GroupId]
					, [GroupName]
					, [LineNumber]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[QuestionFormGroup] {0}
				)
				SELECT
				       [GroupId],
				       [GroupName],
				       [LineNumber],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[QuestionFormGroup] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_SeanceQuestionOption_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the SeanceQuestionOption table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[OptionId],
					[QuestionId],
					[OptionName]
				FROM
					[dbo].[SeanceQuestionOption]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_SeanceQuestionOption_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the SeanceQuestionOption table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[OptionId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [OptionId]'
				SET @SQL = @SQL + ', [QuestionId]'
				SET @SQL = @SQL + ', [OptionName]'
				SET @SQL = @SQL + ' FROM [dbo].[SeanceQuestionOption]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [OptionId],'
				SET @SQL = @SQL + ' [QuestionId],'
				SET @SQL = @SQL + ' [OptionName]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SeanceQuestionOption]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_SeanceQuestionOption_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the SeanceQuestionOption table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionName" type="varchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SeanceQuestionOption]
					(
					[QuestionId]
					,[OptionName]
					)
				VALUES
					(
					@QuestionId
					,@OptionName
					)
				-- Get the identity value
				SET @OptionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionOption_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the SeanceQuestionOption table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionName" type="varchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SeanceQuestionOption]
				SET
					[QuestionId] = @QuestionId
					,[OptionName] = @OptionName
				WHERE
[OptionId] = @OptionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionOption_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the SeanceQuestionOption table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SeanceQuestionOption] WITH (ROWLOCK) 
				WHERE
					[OptionId] = @OptionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionOption_GetByQuestionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceQuestionOption table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OptionId],
					[QuestionId],
					[OptionName]
				FROM
					[dbo].[SeanceQuestionOption]
				WHERE
					[QuestionId] = @QuestionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionOption_GetByOptionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceQuestionOption table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OptionId],
					[QuestionId],
					[OptionName]
				FROM
					[dbo].[SeanceQuestionOption]
				WHERE
					[OptionId] = @OptionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionOption_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the SeanceQuestionOption table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OptionName" type="varchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OptionId]
	, [QuestionId]
	, [OptionName]
    FROM
	[dbo].[SeanceQuestionOption]
    WHERE 
	 ([OptionId] = @OptionId OR @OptionId IS NULL)
	AND ([QuestionId] = @QuestionId OR @QuestionId IS NULL)
	AND ([OptionName] = @OptionName OR @OptionName IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OptionId]
	, [QuestionId]
	, [OptionName]
    FROM
	[dbo].[SeanceQuestionOption]
    WHERE 
	 ([OptionId] = @OptionId AND @OptionId is not null)
	OR ([QuestionId] = @QuestionId AND @QuestionId is not null)
	OR ([OptionName] = @OptionName AND @OptionName is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_SeanceQuestionOption_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the SeanceQuestionOption table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [OptionId]
					, [QuestionId]
					, [OptionName]
					FROM [dbo].[SeanceQuestionOption] {0}
				)
				SELECT
				       [OptionId],
				       [QuestionId],
				       [OptionName]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SeanceQuestionOption] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Town_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Town table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[TownId],
					[RowNumber],
					[AdminId],
					[ObjectId],
					[ParentId],
					[ProvinceId],
					[TownName],
					[Longitude],
					[Latitude],
					[Type],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Town]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Town_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Town table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[TownId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [TownId]'
				SET @SQL = @SQL + ', [RowNumber]'
				SET @SQL = @SQL + ', [AdminId]'
				SET @SQL = @SQL + ', [ObjectId]'
				SET @SQL = @SQL + ', [ParentId]'
				SET @SQL = @SQL + ', [ProvinceId]'
				SET @SQL = @SQL + ', [TownName]'
				SET @SQL = @SQL + ', [Longitude]'
				SET @SQL = @SQL + ', [Latitude]'
				SET @SQL = @SQL + ', [Type]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [CreateTime]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [UpdateTime]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Town]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [TownId],'
				SET @SQL = @SQL + ' [RowNumber],'
				SET @SQL = @SQL + ' [AdminId],'
				SET @SQL = @SQL + ' [ObjectId],'
				SET @SQL = @SQL + ' [ParentId],'
				SET @SQL = @SQL + ' [ProvinceId],'
				SET @SQL = @SQL + ' [TownName],'
				SET @SQL = @SQL + ' [Longitude],'
				SET @SQL = @SQL + ' [Latitude],'
				SET @SQL = @SQL + ' [Type],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [CreateTime],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [UpdateTime],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Town]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Town_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Town table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TownId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TownName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Type" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Town]
					(
					[RowNumber]
					,[AdminId]
					,[ObjectId]
					,[ParentId]
					,[ProvinceId]
					,[TownName]
					,[Longitude]
					,[Latitude]
					,[Type]
					,[CreateDate]
					,[CreateTime]
					,[UpdateDate]
					,[UpdateTime]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@RowNumber
					,@AdminId
					,@ObjectId
					,@ParentId
					,@ProvinceId
					,@TownName
					,@Longitude
					,@Latitude
					,@Type
					,@CreateDate
					,@CreateTime
					,@UpdateDate
					,@UpdateTime
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @TownId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Town_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Town table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TownName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Type" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Town]
				SET
					[RowNumber] = @RowNumber
					,[AdminId] = @AdminId
					,[ObjectId] = @ObjectId
					,[ParentId] = @ParentId
					,[ProvinceId] = @ProvinceId
					,[TownName] = @TownName
					,[Longitude] = @Longitude
					,[Latitude] = @Latitude
					,[Type] = @Type
					,[CreateDate] = @CreateDate
					,[CreateTime] = @CreateTime
					,[UpdateDate] = @UpdateDate
					,[UpdateTime] = @UpdateTime
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[TownId] = @TownId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Town_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Town table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Town] WITH (ROWLOCK) 
				WHERE
					[TownId] = @TownId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Town_GetByProvinceId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Town table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[TownId],
					[RowNumber],
					[AdminId],
					[ObjectId],
					[ParentId],
					[ProvinceId],
					[TownName],
					[Longitude],
					[Latitude],
					[Type],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Town]
				WHERE
					[ProvinceId] = @ProvinceId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Town_GetByTownId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Town table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[TownId],
					[RowNumber],
					[AdminId],
					[ObjectId],
					[ParentId],
					[ProvinceId],
					[TownName],
					[Longitude],
					[Latitude],
					[Type],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Town]
				WHERE
					[TownId] = @TownId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Town_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Town table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TownName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Type" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [TownId]
	, [RowNumber]
	, [AdminId]
	, [ObjectId]
	, [ParentId]
	, [ProvinceId]
	, [TownName]
	, [Longitude]
	, [Latitude]
	, [Type]
	, [CreateDate]
	, [CreateTime]
	, [UpdateDate]
	, [UpdateTime]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Town]
    WHERE 
	 ([TownId] = @TownId OR @TownId IS NULL)
	AND ([RowNumber] = @RowNumber OR @RowNumber IS NULL)
	AND ([AdminId] = @AdminId OR @AdminId IS NULL)
	AND ([ObjectId] = @ObjectId OR @ObjectId IS NULL)
	AND ([ParentId] = @ParentId OR @ParentId IS NULL)
	AND ([ProvinceId] = @ProvinceId OR @ProvinceId IS NULL)
	AND ([TownName] = @TownName OR @TownName IS NULL)
	AND ([Longitude] = @Longitude OR @Longitude IS NULL)
	AND ([Latitude] = @Latitude OR @Latitude IS NULL)
	AND ([Type] = @Type OR @Type IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([CreateTime] = @CreateTime OR @CreateTime IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([UpdateTime] = @UpdateTime OR @UpdateTime IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [TownId]
	, [RowNumber]
	, [AdminId]
	, [ObjectId]
	, [ParentId]
	, [ProvinceId]
	, [TownName]
	, [Longitude]
	, [Latitude]
	, [Type]
	, [CreateDate]
	, [CreateTime]
	, [UpdateDate]
	, [UpdateTime]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Town]
    WHERE 
	 ([TownId] = @TownId AND @TownId is not null)
	OR ([RowNumber] = @RowNumber AND @RowNumber is not null)
	OR ([AdminId] = @AdminId AND @AdminId is not null)
	OR ([ObjectId] = @ObjectId AND @ObjectId is not null)
	OR ([ParentId] = @ParentId AND @ParentId is not null)
	OR ([ProvinceId] = @ProvinceId AND @ProvinceId is not null)
	OR ([TownName] = @TownName AND @TownName is not null)
	OR ([Longitude] = @Longitude AND @Longitude is not null)
	OR ([Latitude] = @Latitude AND @Latitude is not null)
	OR ([Type] = @Type AND @Type is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([CreateTime] = @CreateTime AND @CreateTime is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([UpdateTime] = @UpdateTime AND @UpdateTime is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Town_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Town table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [TownId]
					, [RowNumber]
					, [AdminId]
					, [ObjectId]
					, [ParentId]
					, [ProvinceId]
					, [TownName]
					, [Longitude]
					, [Latitude]
					, [Type]
					, [CreateDate]
					, [CreateTime]
					, [UpdateDate]
					, [UpdateTime]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Town] {0}
				)
				SELECT
				       [TownId],
				       [RowNumber],
				       [AdminId],
				       [ObjectId],
				       [ParentId],
				       [ProvinceId],
				       [TownName],
				       [Longitude],
				       [Latitude],
				       [Type],
				       [CreateDate],
				       [CreateTime],
				       [UpdateDate],
				       [UpdateTime],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Town] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Town_GetByProvinceId"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT 
		t.* 
	FROM 
		dbo.Town t (NOLOCK)
	WHERE
		t.ProvinceId = @ProvinceId
	ORDER BY
		t.RowNumber
END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="sp_SeanceReason_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the SeanceReason table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[RowId],
					[SeanceId],
					[ReasonId]
				FROM
					[dbo].[SeanceReason]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_SeanceReason_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the SeanceReason table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[RowId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [RowId]'
				SET @SQL = @SQL + ', [SeanceId]'
				SET @SQL = @SQL + ', [ReasonId]'
				SET @SQL = @SQL + ' FROM [dbo].[SeanceReason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [RowId],'
				SET @SQL = @SQL + ' [SeanceId],'
				SET @SQL = @SQL + ' [ReasonId]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SeanceReason]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_SeanceReason_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the SeanceReason table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReasonId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SeanceReason]
					(
					[SeanceId]
					,[ReasonId]
					)
				VALUES
					(
					@SeanceId
					,@ReasonId
					)
				-- Get the identity value
				SET @RowId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceReason_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the SeanceReason table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReasonId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SeanceReason]
				SET
					[SeanceId] = @SeanceId
					,[ReasonId] = @ReasonId
				WHERE
[RowId] = @RowId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceReason_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the SeanceReason table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SeanceReason] WITH (ROWLOCK) 
				WHERE
					[RowId] = @RowId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceReason_GetByReasonId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceReason table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ReasonId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[SeanceId],
					[ReasonId]
				FROM
					[dbo].[SeanceReason]
				WHERE
					[ReasonId] = @ReasonId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceReason_GetBySeanceId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceReason table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[SeanceId],
					[ReasonId]
				FROM
					[dbo].[SeanceReason]
				WHERE
					[SeanceId] = @SeanceId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceReason_GetByRowId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceReason table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RowId],
					[SeanceId],
					[ReasonId]
				FROM
					[dbo].[SeanceReason]
				WHERE
					[RowId] = @RowId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_SeanceReason_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the SeanceReason table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReasonId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [RowId]
	, [SeanceId]
	, [ReasonId]
    FROM
	[dbo].[SeanceReason]
    WHERE 
	 ([RowId] = @RowId OR @RowId IS NULL)
	AND ([SeanceId] = @SeanceId OR @SeanceId IS NULL)
	AND ([ReasonId] = @ReasonId OR @ReasonId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [RowId]
	, [SeanceId]
	, [ReasonId]
    FROM
	[dbo].[SeanceReason]
    WHERE 
	 ([RowId] = @RowId AND @RowId is not null)
	OR ([SeanceId] = @SeanceId AND @SeanceId is not null)
	OR ([ReasonId] = @ReasonId AND @ReasonId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_SeanceReason_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the SeanceReason table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [RowId]
					, [SeanceId]
					, [ReasonId]
					FROM [dbo].[SeanceReason] {0}
				)
				SELECT
				       [RowId],
				       [SeanceId],
				       [ReasonId]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SeanceReason] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Teacher_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Teacher table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[TeacherId],
					[SchoolId],
					[FirstName],
					[LastName],
					[Phone],
					[Gsm],
					[Email],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Teacher]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Teacher_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Teacher table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[TeacherId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [TeacherId]'
				SET @SQL = @SQL + ', [SchoolId]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [Gsm]'
				SET @SQL = @SQL + ', [Email]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Teacher]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [TeacherId],'
				SET @SQL = @SQL + ' [SchoolId],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [Gsm],'
				SET @SQL = @SQL + ' [Email],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Teacher]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Teacher_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Teacher table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TeacherId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Gsm" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Teacher]
					(
					[SchoolId]
					,[FirstName]
					,[LastName]
					,[Phone]
					,[Gsm]
					,[Email]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@SchoolId
					,@FirstName
					,@LastName
					,@Phone
					,@Gsm
					,@Email
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @TeacherId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Teacher_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Teacher table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TeacherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Gsm" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Teacher]
				SET
					[SchoolId] = @SchoolId
					,[FirstName] = @FirstName
					,[LastName] = @LastName
					,[Phone] = @Phone
					,[Gsm] = @Gsm
					,[Email] = @Email
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[TeacherId] = @TeacherId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Teacher_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Teacher table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TeacherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Teacher] WITH (ROWLOCK) 
				WHERE
					[TeacherId] = @TeacherId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Teacher_GetBySchoolId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Teacher table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[TeacherId],
					[SchoolId],
					[FirstName],
					[LastName],
					[Phone],
					[Gsm],
					[Email],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Teacher]
				WHERE
					[SchoolId] = @SchoolId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Teacher_GetByTeacherId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Teacher table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TeacherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[TeacherId],
					[SchoolId],
					[FirstName],
					[LastName],
					[Phone],
					[Gsm],
					[Email],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Teacher]
				WHERE
					[TeacherId] = @TeacherId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Teacher_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Teacher table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@TeacherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Phone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Gsm" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [TeacherId]
	, [SchoolId]
	, [FirstName]
	, [LastName]
	, [Phone]
	, [Gsm]
	, [Email]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Teacher]
    WHERE 
	 ([TeacherId] = @TeacherId OR @TeacherId IS NULL)
	AND ([SchoolId] = @SchoolId OR @SchoolId IS NULL)
	AND ([FirstName] = @FirstName OR @FirstName IS NULL)
	AND ([LastName] = @LastName OR @LastName IS NULL)
	AND ([Phone] = @Phone OR @Phone IS NULL)
	AND ([Gsm] = @Gsm OR @Gsm IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [TeacherId]
	, [SchoolId]
	, [FirstName]
	, [LastName]
	, [Phone]
	, [Gsm]
	, [Email]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Teacher]
    WHERE 
	 ([TeacherId] = @TeacherId AND @TeacherId is not null)
	OR ([SchoolId] = @SchoolId AND @SchoolId is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([LastName] = @LastName AND @LastName is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([Gsm] = @Gsm AND @Gsm is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Teacher_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Teacher table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [TeacherId]
					, [SchoolId]
					, [FirstName]
					, [LastName]
					, [Phone]
					, [Gsm]
					, [Email]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Teacher] {0}
				)
				SELECT
				       [TeacherId],
				       [SchoolId],
				       [FirstName],
				       [LastName],
				       [Phone],
				       [Gsm],
				       [Email],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Teacher] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Wippsi_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Wippsi table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[WippsiId],
					[SeanceId],
					[GeneralRawScore],
					[GeneralStandartScore],
					[SimilarityRawScore],
					[SimilarityStandartScore],
					[ArithmeticRawScore],
					[ArithmeticStandartScore],
					[WordRawScore],
					[WordStandartScore],
					[UnderstandingRawScore],
					[UnderstandingStandartScore],
					[SentencesRawScore],
					[SentencesStandartScore],
					[ImageDefineRawScore],
					[ImageDefineStandartScore],
					[AnimalHomesRawScore],
					[AnimalHomesStandartScore],
					[GeometricShapeRawScore],
					[GeometricShapeStandartScore],
					[BlocksPatternRawScore],
					[BlocksPatternStandartScore],
					[AnimalHomesAgainRawScore],
					[AnimalHomesAgainStandartScore],
					[MazesRawScore],
					[MazesStandartScore],
					[TotalVerbalScore],
					[TotalPerformanceScore],
					[TotalScore],
					[Notes],
					[TestDate],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Wippsi]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Wippsi_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Wippsi table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[WippsiId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [WippsiId]'
				SET @SQL = @SQL + ', [SeanceId]'
				SET @SQL = @SQL + ', [GeneralRawScore]'
				SET @SQL = @SQL + ', [GeneralStandartScore]'
				SET @SQL = @SQL + ', [SimilarityRawScore]'
				SET @SQL = @SQL + ', [SimilarityStandartScore]'
				SET @SQL = @SQL + ', [ArithmeticRawScore]'
				SET @SQL = @SQL + ', [ArithmeticStandartScore]'
				SET @SQL = @SQL + ', [WordRawScore]'
				SET @SQL = @SQL + ', [WordStandartScore]'
				SET @SQL = @SQL + ', [UnderstandingRawScore]'
				SET @SQL = @SQL + ', [UnderstandingStandartScore]'
				SET @SQL = @SQL + ', [SentencesRawScore]'
				SET @SQL = @SQL + ', [SentencesStandartScore]'
				SET @SQL = @SQL + ', [ImageDefineRawScore]'
				SET @SQL = @SQL + ', [ImageDefineStandartScore]'
				SET @SQL = @SQL + ', [AnimalHomesRawScore]'
				SET @SQL = @SQL + ', [AnimalHomesStandartScore]'
				SET @SQL = @SQL + ', [GeometricShapeRawScore]'
				SET @SQL = @SQL + ', [GeometricShapeStandartScore]'
				SET @SQL = @SQL + ', [BlocksPatternRawScore]'
				SET @SQL = @SQL + ', [BlocksPatternStandartScore]'
				SET @SQL = @SQL + ', [AnimalHomesAgainRawScore]'
				SET @SQL = @SQL + ', [AnimalHomesAgainStandartScore]'
				SET @SQL = @SQL + ', [MazesRawScore]'
				SET @SQL = @SQL + ', [MazesStandartScore]'
				SET @SQL = @SQL + ', [TotalVerbalScore]'
				SET @SQL = @SQL + ', [TotalPerformanceScore]'
				SET @SQL = @SQL + ', [TotalScore]'
				SET @SQL = @SQL + ', [Notes]'
				SET @SQL = @SQL + ', [TestDate]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Wippsi]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [WippsiId],'
				SET @SQL = @SQL + ' [SeanceId],'
				SET @SQL = @SQL + ' [GeneralRawScore],'
				SET @SQL = @SQL + ' [GeneralStandartScore],'
				SET @SQL = @SQL + ' [SimilarityRawScore],'
				SET @SQL = @SQL + ' [SimilarityStandartScore],'
				SET @SQL = @SQL + ' [ArithmeticRawScore],'
				SET @SQL = @SQL + ' [ArithmeticStandartScore],'
				SET @SQL = @SQL + ' [WordRawScore],'
				SET @SQL = @SQL + ' [WordStandartScore],'
				SET @SQL = @SQL + ' [UnderstandingRawScore],'
				SET @SQL = @SQL + ' [UnderstandingStandartScore],'
				SET @SQL = @SQL + ' [SentencesRawScore],'
				SET @SQL = @SQL + ' [SentencesStandartScore],'
				SET @SQL = @SQL + ' [ImageDefineRawScore],'
				SET @SQL = @SQL + ' [ImageDefineStandartScore],'
				SET @SQL = @SQL + ' [AnimalHomesRawScore],'
				SET @SQL = @SQL + ' [AnimalHomesStandartScore],'
				SET @SQL = @SQL + ' [GeometricShapeRawScore],'
				SET @SQL = @SQL + ' [GeometricShapeStandartScore],'
				SET @SQL = @SQL + ' [BlocksPatternRawScore],'
				SET @SQL = @SQL + ' [BlocksPatternStandartScore],'
				SET @SQL = @SQL + ' [AnimalHomesAgainRawScore],'
				SET @SQL = @SQL + ' [AnimalHomesAgainStandartScore],'
				SET @SQL = @SQL + ' [MazesRawScore],'
				SET @SQL = @SQL + ' [MazesStandartScore],'
				SET @SQL = @SQL + ' [TotalVerbalScore],'
				SET @SQL = @SQL + ' [TotalPerformanceScore],'
				SET @SQL = @SQL + ' [TotalScore],'
				SET @SQL = @SQL + ' [Notes],'
				SET @SQL = @SQL + ' [TestDate],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Wippsi]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Wippsi_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Wippsi table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WippsiId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneralRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneralStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SimilarityRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SimilarityStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ArithmeticRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ArithmeticStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WordRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WordStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UnderstandingRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UnderstandingStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SentencesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SentencesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageDefineRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageDefineStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AnimalHomesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AnimalHomesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeometricShapeRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeometricShapeStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BlocksPatternRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BlocksPatternStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AnimalHomesAgainRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AnimalHomesAgainStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MazesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MazesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalVerbalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalPerformanceScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@TestDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Wippsi]
					(
					[SeanceId]
					,[GeneralRawScore]
					,[GeneralStandartScore]
					,[SimilarityRawScore]
					,[SimilarityStandartScore]
					,[ArithmeticRawScore]
					,[ArithmeticStandartScore]
					,[WordRawScore]
					,[WordStandartScore]
					,[UnderstandingRawScore]
					,[UnderstandingStandartScore]
					,[SentencesRawScore]
					,[SentencesStandartScore]
					,[ImageDefineRawScore]
					,[ImageDefineStandartScore]
					,[AnimalHomesRawScore]
					,[AnimalHomesStandartScore]
					,[GeometricShapeRawScore]
					,[GeometricShapeStandartScore]
					,[BlocksPatternRawScore]
					,[BlocksPatternStandartScore]
					,[AnimalHomesAgainRawScore]
					,[AnimalHomesAgainStandartScore]
					,[MazesRawScore]
					,[MazesStandartScore]
					,[TotalVerbalScore]
					,[TotalPerformanceScore]
					,[TotalScore]
					,[Notes]
					,[TestDate]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@SeanceId
					,@GeneralRawScore
					,@GeneralStandartScore
					,@SimilarityRawScore
					,@SimilarityStandartScore
					,@ArithmeticRawScore
					,@ArithmeticStandartScore
					,@WordRawScore
					,@WordStandartScore
					,@UnderstandingRawScore
					,@UnderstandingStandartScore
					,@SentencesRawScore
					,@SentencesStandartScore
					,@ImageDefineRawScore
					,@ImageDefineStandartScore
					,@AnimalHomesRawScore
					,@AnimalHomesStandartScore
					,@GeometricShapeRawScore
					,@GeometricShapeStandartScore
					,@BlocksPatternRawScore
					,@BlocksPatternStandartScore
					,@AnimalHomesAgainRawScore
					,@AnimalHomesAgainStandartScore
					,@MazesRawScore
					,@MazesStandartScore
					,@TotalVerbalScore
					,@TotalPerformanceScore
					,@TotalScore
					,@Notes
					,@TestDate
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @WippsiId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Wippsi_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Wippsi table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WippsiId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneralRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneralStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SimilarityRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SimilarityStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ArithmeticRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ArithmeticStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WordRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WordStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UnderstandingRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UnderstandingStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SentencesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SentencesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageDefineRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageDefineStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AnimalHomesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AnimalHomesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeometricShapeRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeometricShapeStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BlocksPatternRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BlocksPatternStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AnimalHomesAgainRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AnimalHomesAgainStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MazesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MazesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalVerbalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalPerformanceScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@TestDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Wippsi]
				SET
					[SeanceId] = @SeanceId
					,[GeneralRawScore] = @GeneralRawScore
					,[GeneralStandartScore] = @GeneralStandartScore
					,[SimilarityRawScore] = @SimilarityRawScore
					,[SimilarityStandartScore] = @SimilarityStandartScore
					,[ArithmeticRawScore] = @ArithmeticRawScore
					,[ArithmeticStandartScore] = @ArithmeticStandartScore
					,[WordRawScore] = @WordRawScore
					,[WordStandartScore] = @WordStandartScore
					,[UnderstandingRawScore] = @UnderstandingRawScore
					,[UnderstandingStandartScore] = @UnderstandingStandartScore
					,[SentencesRawScore] = @SentencesRawScore
					,[SentencesStandartScore] = @SentencesStandartScore
					,[ImageDefineRawScore] = @ImageDefineRawScore
					,[ImageDefineStandartScore] = @ImageDefineStandartScore
					,[AnimalHomesRawScore] = @AnimalHomesRawScore
					,[AnimalHomesStandartScore] = @AnimalHomesStandartScore
					,[GeometricShapeRawScore] = @GeometricShapeRawScore
					,[GeometricShapeStandartScore] = @GeometricShapeStandartScore
					,[BlocksPatternRawScore] = @BlocksPatternRawScore
					,[BlocksPatternStandartScore] = @BlocksPatternStandartScore
					,[AnimalHomesAgainRawScore] = @AnimalHomesAgainRawScore
					,[AnimalHomesAgainStandartScore] = @AnimalHomesAgainStandartScore
					,[MazesRawScore] = @MazesRawScore
					,[MazesStandartScore] = @MazesStandartScore
					,[TotalVerbalScore] = @TotalVerbalScore
					,[TotalPerformanceScore] = @TotalPerformanceScore
					,[TotalScore] = @TotalScore
					,[Notes] = @Notes
					,[TestDate] = @TestDate
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[WippsiId] = @WippsiId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Wippsi_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Wippsi table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WippsiId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Wippsi] WITH (ROWLOCK) 
				WHERE
					[WippsiId] = @WippsiId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Wippsi_GetByWippsiId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Wippsi table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WippsiId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[WippsiId],
					[SeanceId],
					[GeneralRawScore],
					[GeneralStandartScore],
					[SimilarityRawScore],
					[SimilarityStandartScore],
					[ArithmeticRawScore],
					[ArithmeticStandartScore],
					[WordRawScore],
					[WordStandartScore],
					[UnderstandingRawScore],
					[UnderstandingStandartScore],
					[SentencesRawScore],
					[SentencesStandartScore],
					[ImageDefineRawScore],
					[ImageDefineStandartScore],
					[AnimalHomesRawScore],
					[AnimalHomesStandartScore],
					[GeometricShapeRawScore],
					[GeometricShapeStandartScore],
					[BlocksPatternRawScore],
					[BlocksPatternStandartScore],
					[AnimalHomesAgainRawScore],
					[AnimalHomesAgainStandartScore],
					[MazesRawScore],
					[MazesStandartScore],
					[TotalVerbalScore],
					[TotalPerformanceScore],
					[TotalScore],
					[Notes],
					[TestDate],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Wippsi]
				WHERE
					[WippsiId] = @WippsiId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Wippsi_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Wippsi table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@WippsiId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeneralRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeneralStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SimilarityRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SimilarityStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ArithmeticRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ArithmeticStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WordRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WordStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UnderstandingRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UnderstandingStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SentencesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SentencesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageDefineRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageDefineStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AnimalHomesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AnimalHomesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeometricShapeRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeometricShapeStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@BlocksPatternRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@BlocksPatternStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AnimalHomesAgainRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AnimalHomesAgainStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MazesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MazesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalVerbalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalPerformanceScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TestDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [WippsiId]
	, [SeanceId]
	, [GeneralRawScore]
	, [GeneralStandartScore]
	, [SimilarityRawScore]
	, [SimilarityStandartScore]
	, [ArithmeticRawScore]
	, [ArithmeticStandartScore]
	, [WordRawScore]
	, [WordStandartScore]
	, [UnderstandingRawScore]
	, [UnderstandingStandartScore]
	, [SentencesRawScore]
	, [SentencesStandartScore]
	, [ImageDefineRawScore]
	, [ImageDefineStandartScore]
	, [AnimalHomesRawScore]
	, [AnimalHomesStandartScore]
	, [GeometricShapeRawScore]
	, [GeometricShapeStandartScore]
	, [BlocksPatternRawScore]
	, [BlocksPatternStandartScore]
	, [AnimalHomesAgainRawScore]
	, [AnimalHomesAgainStandartScore]
	, [MazesRawScore]
	, [MazesStandartScore]
	, [TotalVerbalScore]
	, [TotalPerformanceScore]
	, [TotalScore]
	, [Notes]
	, [TestDate]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Wippsi]
    WHERE 
	 ([WippsiId] = @WippsiId OR @WippsiId IS NULL)
	AND ([SeanceId] = @SeanceId OR @SeanceId IS NULL)
	AND ([GeneralRawScore] = @GeneralRawScore OR @GeneralRawScore IS NULL)
	AND ([GeneralStandartScore] = @GeneralStandartScore OR @GeneralStandartScore IS NULL)
	AND ([SimilarityRawScore] = @SimilarityRawScore OR @SimilarityRawScore IS NULL)
	AND ([SimilarityStandartScore] = @SimilarityStandartScore OR @SimilarityStandartScore IS NULL)
	AND ([ArithmeticRawScore] = @ArithmeticRawScore OR @ArithmeticRawScore IS NULL)
	AND ([ArithmeticStandartScore] = @ArithmeticStandartScore OR @ArithmeticStandartScore IS NULL)
	AND ([WordRawScore] = @WordRawScore OR @WordRawScore IS NULL)
	AND ([WordStandartScore] = @WordStandartScore OR @WordStandartScore IS NULL)
	AND ([UnderstandingRawScore] = @UnderstandingRawScore OR @UnderstandingRawScore IS NULL)
	AND ([UnderstandingStandartScore] = @UnderstandingStandartScore OR @UnderstandingStandartScore IS NULL)
	AND ([SentencesRawScore] = @SentencesRawScore OR @SentencesRawScore IS NULL)
	AND ([SentencesStandartScore] = @SentencesStandartScore OR @SentencesStandartScore IS NULL)
	AND ([ImageDefineRawScore] = @ImageDefineRawScore OR @ImageDefineRawScore IS NULL)
	AND ([ImageDefineStandartScore] = @ImageDefineStandartScore OR @ImageDefineStandartScore IS NULL)
	AND ([AnimalHomesRawScore] = @AnimalHomesRawScore OR @AnimalHomesRawScore IS NULL)
	AND ([AnimalHomesStandartScore] = @AnimalHomesStandartScore OR @AnimalHomesStandartScore IS NULL)
	AND ([GeometricShapeRawScore] = @GeometricShapeRawScore OR @GeometricShapeRawScore IS NULL)
	AND ([GeometricShapeStandartScore] = @GeometricShapeStandartScore OR @GeometricShapeStandartScore IS NULL)
	AND ([BlocksPatternRawScore] = @BlocksPatternRawScore OR @BlocksPatternRawScore IS NULL)
	AND ([BlocksPatternStandartScore] = @BlocksPatternStandartScore OR @BlocksPatternStandartScore IS NULL)
	AND ([AnimalHomesAgainRawScore] = @AnimalHomesAgainRawScore OR @AnimalHomesAgainRawScore IS NULL)
	AND ([AnimalHomesAgainStandartScore] = @AnimalHomesAgainStandartScore OR @AnimalHomesAgainStandartScore IS NULL)
	AND ([MazesRawScore] = @MazesRawScore OR @MazesRawScore IS NULL)
	AND ([MazesStandartScore] = @MazesStandartScore OR @MazesStandartScore IS NULL)
	AND ([TotalVerbalScore] = @TotalVerbalScore OR @TotalVerbalScore IS NULL)
	AND ([TotalPerformanceScore] = @TotalPerformanceScore OR @TotalPerformanceScore IS NULL)
	AND ([TotalScore] = @TotalScore OR @TotalScore IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([TestDate] = @TestDate OR @TestDate IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [WippsiId]
	, [SeanceId]
	, [GeneralRawScore]
	, [GeneralStandartScore]
	, [SimilarityRawScore]
	, [SimilarityStandartScore]
	, [ArithmeticRawScore]
	, [ArithmeticStandartScore]
	, [WordRawScore]
	, [WordStandartScore]
	, [UnderstandingRawScore]
	, [UnderstandingStandartScore]
	, [SentencesRawScore]
	, [SentencesStandartScore]
	, [ImageDefineRawScore]
	, [ImageDefineStandartScore]
	, [AnimalHomesRawScore]
	, [AnimalHomesStandartScore]
	, [GeometricShapeRawScore]
	, [GeometricShapeStandartScore]
	, [BlocksPatternRawScore]
	, [BlocksPatternStandartScore]
	, [AnimalHomesAgainRawScore]
	, [AnimalHomesAgainStandartScore]
	, [MazesRawScore]
	, [MazesStandartScore]
	, [TotalVerbalScore]
	, [TotalPerformanceScore]
	, [TotalScore]
	, [Notes]
	, [TestDate]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Wippsi]
    WHERE 
	 ([WippsiId] = @WippsiId AND @WippsiId is not null)
	OR ([SeanceId] = @SeanceId AND @SeanceId is not null)
	OR ([GeneralRawScore] = @GeneralRawScore AND @GeneralRawScore is not null)
	OR ([GeneralStandartScore] = @GeneralStandartScore AND @GeneralStandartScore is not null)
	OR ([SimilarityRawScore] = @SimilarityRawScore AND @SimilarityRawScore is not null)
	OR ([SimilarityStandartScore] = @SimilarityStandartScore AND @SimilarityStandartScore is not null)
	OR ([ArithmeticRawScore] = @ArithmeticRawScore AND @ArithmeticRawScore is not null)
	OR ([ArithmeticStandartScore] = @ArithmeticStandartScore AND @ArithmeticStandartScore is not null)
	OR ([WordRawScore] = @WordRawScore AND @WordRawScore is not null)
	OR ([WordStandartScore] = @WordStandartScore AND @WordStandartScore is not null)
	OR ([UnderstandingRawScore] = @UnderstandingRawScore AND @UnderstandingRawScore is not null)
	OR ([UnderstandingStandartScore] = @UnderstandingStandartScore AND @UnderstandingStandartScore is not null)
	OR ([SentencesRawScore] = @SentencesRawScore AND @SentencesRawScore is not null)
	OR ([SentencesStandartScore] = @SentencesStandartScore AND @SentencesStandartScore is not null)
	OR ([ImageDefineRawScore] = @ImageDefineRawScore AND @ImageDefineRawScore is not null)
	OR ([ImageDefineStandartScore] = @ImageDefineStandartScore AND @ImageDefineStandartScore is not null)
	OR ([AnimalHomesRawScore] = @AnimalHomesRawScore AND @AnimalHomesRawScore is not null)
	OR ([AnimalHomesStandartScore] = @AnimalHomesStandartScore AND @AnimalHomesStandartScore is not null)
	OR ([GeometricShapeRawScore] = @GeometricShapeRawScore AND @GeometricShapeRawScore is not null)
	OR ([GeometricShapeStandartScore] = @GeometricShapeStandartScore AND @GeometricShapeStandartScore is not null)
	OR ([BlocksPatternRawScore] = @BlocksPatternRawScore AND @BlocksPatternRawScore is not null)
	OR ([BlocksPatternStandartScore] = @BlocksPatternStandartScore AND @BlocksPatternStandartScore is not null)
	OR ([AnimalHomesAgainRawScore] = @AnimalHomesAgainRawScore AND @AnimalHomesAgainRawScore is not null)
	OR ([AnimalHomesAgainStandartScore] = @AnimalHomesAgainStandartScore AND @AnimalHomesAgainStandartScore is not null)
	OR ([MazesRawScore] = @MazesRawScore AND @MazesRawScore is not null)
	OR ([MazesStandartScore] = @MazesStandartScore AND @MazesStandartScore is not null)
	OR ([TotalVerbalScore] = @TotalVerbalScore AND @TotalVerbalScore is not null)
	OR ([TotalPerformanceScore] = @TotalPerformanceScore AND @TotalPerformanceScore is not null)
	OR ([TotalScore] = @TotalScore AND @TotalScore is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([TestDate] = @TestDate AND @TestDate is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Wippsi_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Wippsi table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [WippsiId]
					, [SeanceId]
					, [GeneralRawScore]
					, [GeneralStandartScore]
					, [SimilarityRawScore]
					, [SimilarityStandartScore]
					, [ArithmeticRawScore]
					, [ArithmeticStandartScore]
					, [WordRawScore]
					, [WordStandartScore]
					, [UnderstandingRawScore]
					, [UnderstandingStandartScore]
					, [SentencesRawScore]
					, [SentencesStandartScore]
					, [ImageDefineRawScore]
					, [ImageDefineStandartScore]
					, [AnimalHomesRawScore]
					, [AnimalHomesStandartScore]
					, [GeometricShapeRawScore]
					, [GeometricShapeStandartScore]
					, [BlocksPatternRawScore]
					, [BlocksPatternStandartScore]
					, [AnimalHomesAgainRawScore]
					, [AnimalHomesAgainStandartScore]
					, [MazesRawScore]
					, [MazesStandartScore]
					, [TotalVerbalScore]
					, [TotalPerformanceScore]
					, [TotalScore]
					, [Notes]
					, [TestDate]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Wippsi] {0}
				)
				SELECT
				       [WippsiId],
				       [SeanceId],
				       [GeneralRawScore],
				       [GeneralStandartScore],
				       [SimilarityRawScore],
				       [SimilarityStandartScore],
				       [ArithmeticRawScore],
				       [ArithmeticStandartScore],
				       [WordRawScore],
				       [WordStandartScore],
				       [UnderstandingRawScore],
				       [UnderstandingStandartScore],
				       [SentencesRawScore],
				       [SentencesStandartScore],
				       [ImageDefineRawScore],
				       [ImageDefineStandartScore],
				       [AnimalHomesRawScore],
				       [AnimalHomesStandartScore],
				       [GeometricShapeRawScore],
				       [GeometricShapeStandartScore],
				       [BlocksPatternRawScore],
				       [BlocksPatternStandartScore],
				       [AnimalHomesAgainRawScore],
				       [AnimalHomesAgainStandartScore],
				       [MazesRawScore],
				       [MazesStandartScore],
				       [TotalVerbalScore],
				       [TotalPerformanceScore],
				       [TotalScore],
				       [Notes],
				       [TestDate],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Wippsi] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the SeanceQuestionAnswer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[CreateOn],
					[UpdateOn]
				FROM
					[dbo].[SeanceQuestionAnswer]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the SeanceQuestionAnswer table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[RowId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [RowId]'
				SET @SQL = @SQL + ', [ClientId]'
				SET @SQL = @SQL + ', [QuestionId]'
				SET @SQL = @SQL + ', [OptionId]'
				SET @SQL = @SQL + ', [CreateOn]'
				SET @SQL = @SQL + ', [UpdateOn]'
				SET @SQL = @SQL + ' FROM [dbo].[SeanceQuestionAnswer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [RowId],'
				SET @SQL = @SQL + ' [ClientId],'
				SET @SQL = @SQL + ' [QuestionId],'
				SET @SQL = @SQL + ' [OptionId],'
				SET @SQL = @SQL + ' [CreateOn],'
				SET @SQL = @SQL + ' [UpdateOn]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[SeanceQuestionAnswer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the SeanceQuestionAnswer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[SeanceQuestionAnswer]
					(
					[ClientId]
					,[QuestionId]
					,[OptionId]
					,[CreateOn]
					,[UpdateOn]
					)
				VALUES
					(
					@ClientId
					,@QuestionId
					,@OptionId
					,@CreateOn
					,@UpdateOn
					)
				-- Get the identity value
				SET @RowId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the SeanceQuestionAnswer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[SeanceQuestionAnswer]
				SET
					[ClientId] = @ClientId
					,[QuestionId] = @QuestionId
					,[OptionId] = @OptionId
					,[CreateOn] = @CreateOn
					,[UpdateOn] = @UpdateOn
				WHERE
[RowId] = @RowId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the SeanceQuestionAnswer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[SeanceQuestionAnswer] WITH (ROWLOCK) 
				WHERE
					[RowId] = @RowId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_GetByClientId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceQuestionAnswer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[CreateOn],
					[UpdateOn]
				FROM
					[dbo].[SeanceQuestionAnswer]
				WHERE
					[ClientId] = @ClientId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_GetByQuestionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceQuestionAnswer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[CreateOn],
					[UpdateOn]
				FROM
					[dbo].[SeanceQuestionAnswer]
				WHERE
					[QuestionId] = @QuestionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_GetByOptionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceQuestionAnswer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[CreateOn],
					[UpdateOn]
				FROM
					[dbo].[SeanceQuestionAnswer]
				WHERE
					[OptionId] = @OptionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_GetByRowId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the SeanceQuestionAnswer table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[CreateOn],
					[UpdateOn]
				FROM
					[dbo].[SeanceQuestionAnswer]
				WHERE
					[RowId] = @RowId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the SeanceQuestionAnswer table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [RowId]
	, [ClientId]
	, [QuestionId]
	, [OptionId]
	, [CreateOn]
	, [UpdateOn]
    FROM
	[dbo].[SeanceQuestionAnswer]
    WHERE 
	 ([RowId] = @RowId OR @RowId IS NULL)
	AND ([ClientId] = @ClientId OR @ClientId IS NULL)
	AND ([QuestionId] = @QuestionId OR @QuestionId IS NULL)
	AND ([OptionId] = @OptionId OR @OptionId IS NULL)
	AND ([CreateOn] = @CreateOn OR @CreateOn IS NULL)
	AND ([UpdateOn] = @UpdateOn OR @UpdateOn IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [RowId]
	, [ClientId]
	, [QuestionId]
	, [OptionId]
	, [CreateOn]
	, [UpdateOn]
    FROM
	[dbo].[SeanceQuestionAnswer]
    WHERE 
	 ([RowId] = @RowId AND @RowId is not null)
	OR ([ClientId] = @ClientId AND @ClientId is not null)
	OR ([QuestionId] = @QuestionId AND @QuestionId is not null)
	OR ([OptionId] = @OptionId AND @OptionId is not null)
	OR ([CreateOn] = @CreateOn AND @CreateOn is not null)
	OR ([UpdateOn] = @UpdateOn AND @UpdateOn is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_SeanceQuestionAnswer_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the SeanceQuestionAnswer table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [RowId]
					, [ClientId]
					, [QuestionId]
					, [OptionId]
					, [CreateOn]
					, [UpdateOn]
					FROM [dbo].[SeanceQuestionAnswer] {0}
				)
				SELECT
				       [RowId],
				       [ClientId],
				       [QuestionId],
				       [OptionId],
				       [CreateOn],
				       [UpdateOn]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[SeanceQuestionAnswer] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Street_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Street table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[StreetId],
					[AdminId],
					[ObjectId],
					[RowNumber],
					[NeighborhoodId],
					[StreetName],
					[Longitude],
					[Latitude],
					[ZipCode],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Street]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Street_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Street table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[StreetId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [StreetId]'
				SET @SQL = @SQL + ', [AdminId]'
				SET @SQL = @SQL + ', [ObjectId]'
				SET @SQL = @SQL + ', [RowNumber]'
				SET @SQL = @SQL + ', [NeighborhoodId]'
				SET @SQL = @SQL + ', [StreetName]'
				SET @SQL = @SQL + ', [Longitude]'
				SET @SQL = @SQL + ', [Latitude]'
				SET @SQL = @SQL + ', [ZipCode]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [CreateTime]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [UpdateTime]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Street]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [StreetId],'
				SET @SQL = @SQL + ' [AdminId],'
				SET @SQL = @SQL + ' [ObjectId],'
				SET @SQL = @SQL + ' [RowNumber],'
				SET @SQL = @SQL + ' [NeighborhoodId],'
				SET @SQL = @SQL + ' [StreetName],'
				SET @SQL = @SQL + ' [Longitude],'
				SET @SQL = @SQL + ' [Latitude],'
				SET @SQL = @SQL + ' [ZipCode],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [CreateTime],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [UpdateTime],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Street]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Street_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Street table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StreetId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StreetName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@ZipCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Street]
					(
					[AdminId]
					,[ObjectId]
					,[RowNumber]
					,[NeighborhoodId]
					,[StreetName]
					,[Longitude]
					,[Latitude]
					,[ZipCode]
					,[CreateDate]
					,[CreateTime]
					,[UpdateDate]
					,[UpdateTime]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@AdminId
					,@ObjectId
					,@RowNumber
					,@NeighborhoodId
					,@StreetName
					,@Longitude
					,@Latitude
					,@ZipCode
					,@CreateDate
					,@CreateTime
					,@UpdateDate
					,@UpdateTime
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @StreetId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Street_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Street table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StreetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StreetName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@ZipCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Street]
				SET
					[AdminId] = @AdminId
					,[ObjectId] = @ObjectId
					,[RowNumber] = @RowNumber
					,[NeighborhoodId] = @NeighborhoodId
					,[StreetName] = @StreetName
					,[Longitude] = @Longitude
					,[Latitude] = @Latitude
					,[ZipCode] = @ZipCode
					,[CreateDate] = @CreateDate
					,[CreateTime] = @CreateTime
					,[UpdateDate] = @UpdateDate
					,[UpdateTime] = @UpdateTime
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[StreetId] = @StreetId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Street_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Street table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StreetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Street] WITH (ROWLOCK) 
				WHERE
					[StreetId] = @StreetId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Street_GetByNeighborhoodId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Street table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[StreetId],
					[AdminId],
					[ObjectId],
					[RowNumber],
					[NeighborhoodId],
					[StreetName],
					[Longitude],
					[Latitude],
					[ZipCode],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Street]
				WHERE
					[NeighborhoodId] = @NeighborhoodId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Street_GetByStreetId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Street table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StreetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[StreetId],
					[AdminId],
					[ObjectId],
					[RowNumber],
					[NeighborhoodId],
					[StreetName],
					[Longitude],
					[Latitude],
					[ZipCode],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Street]
				WHERE
					[StreetId] = @StreetId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Street_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Street table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@StreetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StreetName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@ZipCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [StreetId]
	, [AdminId]
	, [ObjectId]
	, [RowNumber]
	, [NeighborhoodId]
	, [StreetName]
	, [Longitude]
	, [Latitude]
	, [ZipCode]
	, [CreateDate]
	, [CreateTime]
	, [UpdateDate]
	, [UpdateTime]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Street]
    WHERE 
	 ([StreetId] = @StreetId OR @StreetId IS NULL)
	AND ([AdminId] = @AdminId OR @AdminId IS NULL)
	AND ([ObjectId] = @ObjectId OR @ObjectId IS NULL)
	AND ([RowNumber] = @RowNumber OR @RowNumber IS NULL)
	AND ([NeighborhoodId] = @NeighborhoodId OR @NeighborhoodId IS NULL)
	AND ([StreetName] = @StreetName OR @StreetName IS NULL)
	AND ([Longitude] = @Longitude OR @Longitude IS NULL)
	AND ([Latitude] = @Latitude OR @Latitude IS NULL)
	AND ([ZipCode] = @ZipCode OR @ZipCode IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([CreateTime] = @CreateTime OR @CreateTime IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([UpdateTime] = @UpdateTime OR @UpdateTime IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [StreetId]
	, [AdminId]
	, [ObjectId]
	, [RowNumber]
	, [NeighborhoodId]
	, [StreetName]
	, [Longitude]
	, [Latitude]
	, [ZipCode]
	, [CreateDate]
	, [CreateTime]
	, [UpdateDate]
	, [UpdateTime]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Street]
    WHERE 
	 ([StreetId] = @StreetId AND @StreetId is not null)
	OR ([AdminId] = @AdminId AND @AdminId is not null)
	OR ([ObjectId] = @ObjectId AND @ObjectId is not null)
	OR ([RowNumber] = @RowNumber AND @RowNumber is not null)
	OR ([NeighborhoodId] = @NeighborhoodId AND @NeighborhoodId is not null)
	OR ([StreetName] = @StreetName AND @StreetName is not null)
	OR ([Longitude] = @Longitude AND @Longitude is not null)
	OR ([Latitude] = @Latitude AND @Latitude is not null)
	OR ([ZipCode] = @ZipCode AND @ZipCode is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([CreateTime] = @CreateTime AND @CreateTime is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([UpdateTime] = @UpdateTime AND @UpdateTime is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Street_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Street table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [StreetId]
					, [AdminId]
					, [ObjectId]
					, [RowNumber]
					, [NeighborhoodId]
					, [StreetName]
					, [Longitude]
					, [Latitude]
					, [ZipCode]
					, [CreateDate]
					, [CreateTime]
					, [UpdateDate]
					, [UpdateTime]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Street] {0}
				)
				SELECT
				       [StreetId],
				       [AdminId],
				       [ObjectId],
				       [RowNumber],
				       [NeighborhoodId],
				       [StreetName],
				       [Longitude],
				       [Latitude],
				       [ZipCode],
				       [CreateDate],
				       [CreateTime],
				       [UpdateDate],
				       [UpdateTime],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Street] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Street_GetByNeighborhoodId"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT 
		s.* 
	FROM 
		dbo.Street s (NOLOCK)
	WHERE
		s.NeighborhoodId = @NeighborhoodId
	ORDER BY
		s.RowNumber
END
			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="sp_QuestionForm_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the QuestionForm table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[QuestionId],
					[GroupId],
					[QuestionRef],
					[QuestionName],
					[LineNumber],
					[Status],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionForm]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_QuestionForm_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the QuestionForm table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[QuestionId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [QuestionId]'
				SET @SQL = @SQL + ', [GroupId]'
				SET @SQL = @SQL + ', [QuestionRef]'
				SET @SQL = @SQL + ', [QuestionName]'
				SET @SQL = @SQL + ', [LineNumber]'
				SET @SQL = @SQL + ', [Status]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[QuestionForm]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [QuestionId],'
				SET @SQL = @SQL + ' [GroupId],'
				SET @SQL = @SQL + ' [QuestionRef],'
				SET @SQL = @SQL + ' [QuestionName],'
				SET @SQL = @SQL + ' [LineNumber],'
				SET @SQL = @SQL + ' [Status],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[QuestionForm]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_QuestionForm_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the QuestionForm table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionRef" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@QuestionName" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[QuestionForm]
					(
					[GroupId]
					,[QuestionRef]
					,[QuestionName]
					,[LineNumber]
					,[Status]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@GroupId
					,@QuestionRef
					,@QuestionName
					,@LineNumber
					,@Status
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @QuestionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionForm_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the QuestionForm table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionRef" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@QuestionName" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[QuestionForm]
				SET
					[GroupId] = @GroupId
					,[QuestionRef] = @QuestionRef
					,[QuestionName] = @QuestionName
					,[LineNumber] = @LineNumber
					,[Status] = @Status
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[QuestionId] = @QuestionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionForm_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the QuestionForm table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[QuestionForm] WITH (ROWLOCK) 
				WHERE
					[QuestionId] = @QuestionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionForm_GetByGroupId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the QuestionForm table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[QuestionId],
					[GroupId],
					[QuestionRef],
					[QuestionName],
					[LineNumber],
					[Status],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionForm]
				WHERE
					[GroupId] = @GroupId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionForm_GetByQuestionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the QuestionForm table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[QuestionId],
					[GroupId],
					[QuestionRef],
					[QuestionName],
					[LineNumber],
					[Status],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionForm]
				WHERE
					[QuestionId] = @QuestionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_QuestionForm_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the QuestionForm table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionRef" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@QuestionName" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [QuestionId]
	, [GroupId]
	, [QuestionRef]
	, [QuestionName]
	, [LineNumber]
	, [Status]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[QuestionForm]
    WHERE 
	 ([QuestionId] = @QuestionId OR @QuestionId IS NULL)
	AND ([GroupId] = @GroupId OR @GroupId IS NULL)
	AND ([QuestionRef] = @QuestionRef OR @QuestionRef IS NULL)
	AND ([QuestionName] = @QuestionName OR @QuestionName IS NULL)
	AND ([LineNumber] = @LineNumber OR @LineNumber IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [QuestionId]
	, [GroupId]
	, [QuestionRef]
	, [QuestionName]
	, [LineNumber]
	, [Status]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[QuestionForm]
    WHERE 
	 ([QuestionId] = @QuestionId AND @QuestionId is not null)
	OR ([GroupId] = @GroupId AND @GroupId is not null)
	OR ([QuestionRef] = @QuestionRef AND @QuestionRef is not null)
	OR ([QuestionName] = @QuestionName AND @QuestionName is not null)
	OR ([LineNumber] = @LineNumber AND @LineNumber is not null)
	OR ([Status] = @Status AND @Status is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_QuestionForm_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the QuestionForm table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [QuestionId]
					, [GroupId]
					, [QuestionRef]
					, [QuestionName]
					, [LineNumber]
					, [Status]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[QuestionForm] {0}
				)
				SELECT
				       [QuestionId],
				       [GroupId],
				       [QuestionRef],
				       [QuestionName],
				       [LineNumber],
				       [Status],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[QuestionForm] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Sibling_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Sibling table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SiblingId],
					[ClientId],
					[FullName],
					[BirthDate],
					[Gender],
					[Age],
					[School],
					[ClassRoom],
					[Note],
					[CreateOn],
					[UpdateOn],
					[UserId]
				FROM
					[dbo].[Sibling]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Sibling_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Sibling table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SiblingId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SiblingId]'
				SET @SQL = @SQL + ', [ClientId]'
				SET @SQL = @SQL + ', [FullName]'
				SET @SQL = @SQL + ', [BirthDate]'
				SET @SQL = @SQL + ', [Gender]'
				SET @SQL = @SQL + ', [Age]'
				SET @SQL = @SQL + ', [School]'
				SET @SQL = @SQL + ', [ClassRoom]'
				SET @SQL = @SQL + ', [Note]'
				SET @SQL = @SQL + ', [CreateOn]'
				SET @SQL = @SQL + ', [UpdateOn]'
				SET @SQL = @SQL + ', [UserId]'
				SET @SQL = @SQL + ' FROM [dbo].[Sibling]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SiblingId],'
				SET @SQL = @SQL + ' [ClientId],'
				SET @SQL = @SQL + ' [FullName],'
				SET @SQL = @SQL + ' [BirthDate],'
				SET @SQL = @SQL + ' [Gender],'
				SET @SQL = @SQL + ' [Age],'
				SET @SQL = @SQL + ' [School],'
				SET @SQL = @SQL + ' [ClassRoom],'
				SET @SQL = @SQL + ' [Note],'
				SET @SQL = @SQL + ' [CreateOn],'
				SET @SQL = @SQL + ' [UpdateOn],'
				SET @SQL = @SQL + ' [UserId]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Sibling]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Sibling_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Sibling table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiblingId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BirthDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Gender" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Age" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@School" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ClassRoom" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Note" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Sibling]
					(
					[ClientId]
					,[FullName]
					,[BirthDate]
					,[Gender]
					,[Age]
					,[School]
					,[ClassRoom]
					,[Note]
					,[CreateOn]
					,[UpdateOn]
					,[UserId]
					)
				VALUES
					(
					@ClientId
					,@FullName
					,@BirthDate
					,@Gender
					,@Age
					,@School
					,@ClassRoom
					,@Note
					,@CreateOn
					,@UpdateOn
					,@UserId
					)
				-- Get the identity value
				SET @SiblingId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Sibling_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Sibling table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiblingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BirthDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@Gender" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Age" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@School" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ClassRoom" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Note" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Sibling]
				SET
					[ClientId] = @ClientId
					,[FullName] = @FullName
					,[BirthDate] = @BirthDate
					,[Gender] = @Gender
					,[Age] = @Age
					,[School] = @School
					,[ClassRoom] = @ClassRoom
					,[Note] = @Note
					,[CreateOn] = @CreateOn
					,[UpdateOn] = @UpdateOn
					,[UserId] = @UserId
				WHERE
[SiblingId] = @SiblingId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Sibling_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Sibling table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiblingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Sibling] WITH (ROWLOCK) 
				WHERE
					[SiblingId] = @SiblingId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Sibling_GetByClientId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Sibling table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SiblingId],
					[ClientId],
					[FullName],
					[BirthDate],
					[Gender],
					[Age],
					[School],
					[ClassRoom],
					[Note],
					[CreateOn],
					[UpdateOn],
					[UserId]
				FROM
					[dbo].[Sibling]
				WHERE
					[ClientId] = @ClientId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Sibling_GetBySiblingId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Sibling table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SiblingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SiblingId],
					[ClientId],
					[FullName],
					[BirthDate],
					[Gender],
					[Age],
					[School],
					[ClassRoom],
					[Note],
					[CreateOn],
					[UpdateOn],
					[UserId]
				FROM
					[dbo].[Sibling]
				WHERE
					[SiblingId] = @SiblingId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Sibling_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Sibling table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SiblingId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BirthDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@Gender" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@Age" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@School" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ClassRoom" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@Note" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateOn" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SiblingId]
	, [ClientId]
	, [FullName]
	, [BirthDate]
	, [Gender]
	, [Age]
	, [School]
	, [ClassRoom]
	, [Note]
	, [CreateOn]
	, [UpdateOn]
	, [UserId]
    FROM
	[dbo].[Sibling]
    WHERE 
	 ([SiblingId] = @SiblingId OR @SiblingId IS NULL)
	AND ([ClientId] = @ClientId OR @ClientId IS NULL)
	AND ([FullName] = @FullName OR @FullName IS NULL)
	AND ([BirthDate] = @BirthDate OR @BirthDate IS NULL)
	AND ([Gender] = @Gender OR @Gender IS NULL)
	AND ([Age] = @Age OR @Age IS NULL)
	AND ([School] = @School OR @School IS NULL)
	AND ([ClassRoom] = @ClassRoom OR @ClassRoom IS NULL)
	AND ([Note] = @Note OR @Note IS NULL)
	AND ([CreateOn] = @CreateOn OR @CreateOn IS NULL)
	AND ([UpdateOn] = @UpdateOn OR @UpdateOn IS NULL)
	AND ([UserId] = @UserId OR @UserId IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SiblingId]
	, [ClientId]
	, [FullName]
	, [BirthDate]
	, [Gender]
	, [Age]
	, [School]
	, [ClassRoom]
	, [Note]
	, [CreateOn]
	, [UpdateOn]
	, [UserId]
    FROM
	[dbo].[Sibling]
    WHERE 
	 ([SiblingId] = @SiblingId AND @SiblingId is not null)
	OR ([ClientId] = @ClientId AND @ClientId is not null)
	OR ([FullName] = @FullName AND @FullName is not null)
	OR ([BirthDate] = @BirthDate AND @BirthDate is not null)
	OR ([Gender] = @Gender AND @Gender is not null)
	OR ([Age] = @Age AND @Age is not null)
	OR ([School] = @School AND @School is not null)
	OR ([ClassRoom] = @ClassRoom AND @ClassRoom is not null)
	OR ([Note] = @Note AND @Note is not null)
	OR ([CreateOn] = @CreateOn AND @CreateOn is not null)
	OR ([UpdateOn] = @UpdateOn AND @UpdateOn is not null)
	OR ([UserId] = @UserId AND @UserId is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Sibling_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Sibling table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [SiblingId]
					, [ClientId]
					, [FullName]
					, [BirthDate]
					, [Gender]
					, [Age]
					, [School]
					, [ClassRoom]
					, [Note]
					, [CreateOn]
					, [UpdateOn]
					, [UserId]
					FROM [dbo].[Sibling] {0}
				)
				SELECT
				       [SiblingId],
				       [ClientId],
				       [FullName],
				       [BirthDate],
				       [Gender],
				       [Age],
				       [School],
				       [ClassRoom],
				       [Note],
				       [CreateOn],
				       [UpdateOn],
				       [UserId]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Sibling] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ClientFather_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the ClientFather table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[FatherId],
					[FullName],
					[Title],
					[Email],
					[Fax],
					[HomePhone],
					[BusinessPhone],
					[MobilePhone],
					[JobId],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientFather]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ClientFather_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ClientFather table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[FatherId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [FatherId]'
				SET @SQL = @SQL + ', [FullName]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [Email]'
				SET @SQL = @SQL + ', [Fax]'
				SET @SQL = @SQL + ', [HomePhone]'
				SET @SQL = @SQL + ', [BusinessPhone]'
				SET @SQL = @SQL + ', [MobilePhone]'
				SET @SQL = @SQL + ', [JobId]'
				SET @SQL = @SQL + ', [Notes]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[ClientFather]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [FatherId],'
				SET @SQL = @SQL + ' [FullName],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [Email],'
				SET @SQL = @SQL + ' [Fax],'
				SET @SQL = @SQL + ' [HomePhone],'
				SET @SQL = @SQL + ' [BusinessPhone],'
				SET @SQL = @SQL + ' [MobilePhone],'
				SET @SQL = @SQL + ' [JobId],'
				SET @SQL = @SQL + ' [Notes],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ClientFather]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_ClientFather_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the ClientFather table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FatherId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Title" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Fax" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@HomePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@BusinessPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@MobilePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ClientFather]
					(
					[FullName]
					,[Title]
					,[Email]
					,[Fax]
					,[HomePhone]
					,[BusinessPhone]
					,[MobilePhone]
					,[JobId]
					,[Notes]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@FullName
					,@Title
					,@Email
					,@Fax
					,@HomePhone
					,@BusinessPhone
					,@MobilePhone
					,@JobId
					,@Notes
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @FatherId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientFather_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the ClientFather table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FatherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Title" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Fax" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@HomePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@BusinessPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@MobilePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ClientFather]
				SET
					[FullName] = @FullName
					,[Title] = @Title
					,[Email] = @Email
					,[Fax] = @Fax
					,[HomePhone] = @HomePhone
					,[BusinessPhone] = @BusinessPhone
					,[MobilePhone] = @MobilePhone
					,[JobId] = @JobId
					,[Notes] = @Notes
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[FatherId] = @FatherId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientFather_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the ClientFather table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FatherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ClientFather] WITH (ROWLOCK) 
				WHERE
					[FatherId] = @FatherId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientFather_GetByFatherId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ClientFather table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FatherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[FatherId],
					[FullName],
					[Title],
					[Email],
					[Fax],
					[HomePhone],
					[BusinessPhone],
					[MobilePhone],
					[JobId],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientFather]
				WHERE
					[FatherId] = @FatherId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_ClientFather_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the ClientFather table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FatherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Title" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Fax" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@HomePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@BusinessPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [FatherId]
	, [FullName]
	, [Title]
	, [Email]
	, [Fax]
	, [HomePhone]
	, [BusinessPhone]
	, [MobilePhone]
	, [JobId]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ClientFather]
    WHERE 
	 ([FatherId] = @FatherId OR @FatherId IS NULL)
	AND ([FullName] = @FullName OR @FullName IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([Fax] = @Fax OR @Fax IS NULL)
	AND ([HomePhone] = @HomePhone OR @HomePhone IS NULL)
	AND ([BusinessPhone] = @BusinessPhone OR @BusinessPhone IS NULL)
	AND ([MobilePhone] = @MobilePhone OR @MobilePhone IS NULL)
	AND ([JobId] = @JobId OR @JobId IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [FatherId]
	, [FullName]
	, [Title]
	, [Email]
	, [Fax]
	, [HomePhone]
	, [BusinessPhone]
	, [MobilePhone]
	, [JobId]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ClientFather]
    WHERE 
	 ([FatherId] = @FatherId AND @FatherId is not null)
	OR ([FullName] = @FullName AND @FullName is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([Fax] = @Fax AND @Fax is not null)
	OR ([HomePhone] = @HomePhone AND @HomePhone is not null)
	OR ([BusinessPhone] = @BusinessPhone AND @BusinessPhone is not null)
	OR ([MobilePhone] = @MobilePhone AND @MobilePhone is not null)
	OR ([JobId] = @JobId AND @JobId is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_ClientFather_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ClientFather table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [FatherId]
					, [FullName]
					, [Title]
					, [Email]
					, [Fax]
					, [HomePhone]
					, [BusinessPhone]
					, [MobilePhone]
					, [JobId]
					, [Notes]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[ClientFather] {0}
				)
				SELECT
				       [FatherId],
				       [FullName],
				       [Title],
				       [Email],
				       [Fax],
				       [HomePhone],
				       [BusinessPhone],
				       [MobilePhone],
				       [JobId],
				       [Notes],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ClientFather] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ClientMother_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the ClientMother table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MotherId],
					[FullName],
					[Title],
					[Email],
					[Fax],
					[HomePhone],
					[BusinessPhone],
					[MobilePhone],
					[JobId],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientMother]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ClientMother_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ClientMother table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[MotherId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [MotherId]'
				SET @SQL = @SQL + ', [FullName]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [Email]'
				SET @SQL = @SQL + ', [Fax]'
				SET @SQL = @SQL + ', [HomePhone]'
				SET @SQL = @SQL + ', [BusinessPhone]'
				SET @SQL = @SQL + ', [MobilePhone]'
				SET @SQL = @SQL + ', [JobId]'
				SET @SQL = @SQL + ', [Notes]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[ClientMother]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [MotherId],'
				SET @SQL = @SQL + ' [FullName],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [Email],'
				SET @SQL = @SQL + ' [Fax],'
				SET @SQL = @SQL + ' [HomePhone],'
				SET @SQL = @SQL + ' [BusinessPhone],'
				SET @SQL = @SQL + ' [MobilePhone],'
				SET @SQL = @SQL + ' [JobId],'
				SET @SQL = @SQL + ' [Notes],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ClientMother]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_ClientMother_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the ClientMother table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MotherId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Title" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Fax" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@HomePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@BusinessPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@MobilePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ClientMother]
					(
					[FullName]
					,[Title]
					,[Email]
					,[Fax]
					,[HomePhone]
					,[BusinessPhone]
					,[MobilePhone]
					,[JobId]
					,[Notes]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@FullName
					,@Title
					,@Email
					,@Fax
					,@HomePhone
					,@BusinessPhone
					,@MobilePhone
					,@JobId
					,@Notes
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @MotherId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientMother_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the ClientMother table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MotherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Title" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Fax" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@HomePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@BusinessPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@MobilePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ClientMother]
				SET
					[FullName] = @FullName
					,[Title] = @Title
					,[Email] = @Email
					,[Fax] = @Fax
					,[HomePhone] = @HomePhone
					,[BusinessPhone] = @BusinessPhone
					,[MobilePhone] = @MobilePhone
					,[JobId] = @JobId
					,[Notes] = @Notes
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[MotherId] = @MotherId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientMother_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the ClientMother table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MotherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ClientMother] WITH (ROWLOCK) 
				WHERE
					[MotherId] = @MotherId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientMother_GetByMotherId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ClientMother table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MotherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MotherId],
					[FullName],
					[Title],
					[Email],
					[Fax],
					[HomePhone],
					[BusinessPhone],
					[MobilePhone],
					[JobId],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientMother]
				WHERE
					[MotherId] = @MotherId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_ClientMother_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the ClientMother table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MotherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Title" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Email" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Fax" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@HomePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@BusinessPhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MotherId]
	, [FullName]
	, [Title]
	, [Email]
	, [Fax]
	, [HomePhone]
	, [BusinessPhone]
	, [MobilePhone]
	, [JobId]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ClientMother]
    WHERE 
	 ([MotherId] = @MotherId OR @MotherId IS NULL)
	AND ([FullName] = @FullName OR @FullName IS NULL)
	AND ([Title] = @Title OR @Title IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([Fax] = @Fax OR @Fax IS NULL)
	AND ([HomePhone] = @HomePhone OR @HomePhone IS NULL)
	AND ([BusinessPhone] = @BusinessPhone OR @BusinessPhone IS NULL)
	AND ([MobilePhone] = @MobilePhone OR @MobilePhone IS NULL)
	AND ([JobId] = @JobId OR @JobId IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MotherId]
	, [FullName]
	, [Title]
	, [Email]
	, [Fax]
	, [HomePhone]
	, [BusinessPhone]
	, [MobilePhone]
	, [JobId]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ClientMother]
    WHERE 
	 ([MotherId] = @MotherId AND @MotherId is not null)
	OR ([FullName] = @FullName AND @FullName is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([Fax] = @Fax AND @Fax is not null)
	OR ([HomePhone] = @HomePhone AND @HomePhone is not null)
	OR ([BusinessPhone] = @BusinessPhone AND @BusinessPhone is not null)
	OR ([MobilePhone] = @MobilePhone AND @MobilePhone is not null)
	OR ([JobId] = @JobId AND @JobId is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_ClientMother_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ClientMother table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [MotherId]
					, [FullName]
					, [Title]
					, [Email]
					, [Fax]
					, [HomePhone]
					, [BusinessPhone]
					, [MobilePhone]
					, [JobId]
					, [Notes]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[ClientMother] {0}
				)
				SELECT
				       [MotherId],
				       [FullName],
				       [Title],
				       [Email],
				       [Fax],
				       [HomePhone],
				       [BusinessPhone],
				       [MobilePhone],
				       [JobId],
				       [Notes],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ClientMother] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ClientAddress_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the ClientAddress table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AddressId],
					[TitleId],
					[AddressLine],
					[ProvinceId],
					[TownId],
					[NeighborhoodId],
					[StreetId],
					[Phone1],
					[Phone2],
					[Mobile],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientAddress]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ClientAddress_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ClientAddress table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AddressId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AddressId]'
				SET @SQL = @SQL + ', [TitleId]'
				SET @SQL = @SQL + ', [AddressLine]'
				SET @SQL = @SQL + ', [ProvinceId]'
				SET @SQL = @SQL + ', [TownId]'
				SET @SQL = @SQL + ', [NeighborhoodId]'
				SET @SQL = @SQL + ', [StreetId]'
				SET @SQL = @SQL + ', [Phone1]'
				SET @SQL = @SQL + ', [Phone2]'
				SET @SQL = @SQL + ', [Mobile]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[ClientAddress]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AddressId],'
				SET @SQL = @SQL + ' [TitleId],'
				SET @SQL = @SQL + ' [AddressLine],'
				SET @SQL = @SQL + ' [ProvinceId],'
				SET @SQL = @SQL + ' [TownId],'
				SET @SQL = @SQL + ' [NeighborhoodId],'
				SET @SQL = @SQL + ' [StreetId],'
				SET @SQL = @SQL + ' [Phone1],'
				SET @SQL = @SQL + ' [Phone2],'
				SET @SQL = @SQL + ' [Mobile],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ClientAddress]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_ClientAddress_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the ClientAddress table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddressId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TitleId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@AddressLine" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StreetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Phone1" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Phone2" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Mobile" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ClientAddress]
					(
					[TitleId]
					,[AddressLine]
					,[ProvinceId]
					,[TownId]
					,[NeighborhoodId]
					,[StreetId]
					,[Phone1]
					,[Phone2]
					,[Mobile]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@TitleId
					,@AddressLine
					,@ProvinceId
					,@TownId
					,@NeighborhoodId
					,@StreetId
					,@Phone1
					,@Phone2
					,@Mobile
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @AddressId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientAddress_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the ClientAddress table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddressId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TitleId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@AddressLine" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StreetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Phone1" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Phone2" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Mobile" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ClientAddress]
				SET
					[TitleId] = @TitleId
					,[AddressLine] = @AddressLine
					,[ProvinceId] = @ProvinceId
					,[TownId] = @TownId
					,[NeighborhoodId] = @NeighborhoodId
					,[StreetId] = @StreetId
					,[Phone1] = @Phone1
					,[Phone2] = @Phone2
					,[Mobile] = @Mobile
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[AddressId] = @AddressId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientAddress_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the ClientAddress table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddressId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ClientAddress] WITH (ROWLOCK) 
				WHERE
					[AddressId] = @AddressId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientAddress_GetByAddressId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ClientAddress table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddressId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AddressId],
					[TitleId],
					[AddressLine],
					[ProvinceId],
					[TownId],
					[NeighborhoodId],
					[StreetId],
					[Phone1],
					[Phone2],
					[Mobile],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientAddress]
				WHERE
					[AddressId] = @AddressId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_ClientAddress_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the ClientAddress table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TitleId" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressLine" type="varchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StreetId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Phone1" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Phone2" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Mobile" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AddressId]
	, [TitleId]
	, [AddressLine]
	, [ProvinceId]
	, [TownId]
	, [NeighborhoodId]
	, [StreetId]
	, [Phone1]
	, [Phone2]
	, [Mobile]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ClientAddress]
    WHERE 
	 ([AddressId] = @AddressId OR @AddressId IS NULL)
	AND ([TitleId] = @TitleId OR @TitleId IS NULL)
	AND ([AddressLine] = @AddressLine OR @AddressLine IS NULL)
	AND ([ProvinceId] = @ProvinceId OR @ProvinceId IS NULL)
	AND ([TownId] = @TownId OR @TownId IS NULL)
	AND ([NeighborhoodId] = @NeighborhoodId OR @NeighborhoodId IS NULL)
	AND ([StreetId] = @StreetId OR @StreetId IS NULL)
	AND ([Phone1] = @Phone1 OR @Phone1 IS NULL)
	AND ([Phone2] = @Phone2 OR @Phone2 IS NULL)
	AND ([Mobile] = @Mobile OR @Mobile IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AddressId]
	, [TitleId]
	, [AddressLine]
	, [ProvinceId]
	, [TownId]
	, [NeighborhoodId]
	, [StreetId]
	, [Phone1]
	, [Phone2]
	, [Mobile]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ClientAddress]
    WHERE 
	 ([AddressId] = @AddressId AND @AddressId is not null)
	OR ([TitleId] = @TitleId AND @TitleId is not null)
	OR ([AddressLine] = @AddressLine AND @AddressLine is not null)
	OR ([ProvinceId] = @ProvinceId AND @ProvinceId is not null)
	OR ([TownId] = @TownId AND @TownId is not null)
	OR ([NeighborhoodId] = @NeighborhoodId AND @NeighborhoodId is not null)
	OR ([StreetId] = @StreetId AND @StreetId is not null)
	OR ([Phone1] = @Phone1 AND @Phone1 is not null)
	OR ([Phone2] = @Phone2 AND @Phone2 is not null)
	OR ([Mobile] = @Mobile AND @Mobile is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_ClientAddress_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ClientAddress table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [AddressId]
					, [TitleId]
					, [AddressLine]
					, [ProvinceId]
					, [TownId]
					, [NeighborhoodId]
					, [StreetId]
					, [Phone1]
					, [Phone2]
					, [Mobile]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[ClientAddress] {0}
				)
				SELECT
				       [AddressId],
				       [TitleId],
				       [AddressLine],
				       [ProvinceId],
				       [TownId],
				       [NeighborhoodId],
				       [StreetId],
				       [Phone1],
				       [Phone2],
				       [Mobile],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ClientAddress] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="ClientAddress_GetCurrentAddress"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@ClientID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT * FROM ClientAddress WHERE ClientID = @ClientID
	ORDER BY CreateOn DESC
END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="sp_Province_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Province table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProvinceId],
					[RowNumber],
					[AdminId],
					[ObjectId],
					[ParentId],
					[PlateCode],
					[AreaId],
					[PhoneCode],
					[ProvinceName],
					[Longitude],
					[Latitude],
					[Type],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Province]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Province_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Province table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProvinceId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProvinceId]'
				SET @SQL = @SQL + ', [RowNumber]'
				SET @SQL = @SQL + ', [AdminId]'
				SET @SQL = @SQL + ', [ObjectId]'
				SET @SQL = @SQL + ', [ParentId]'
				SET @SQL = @SQL + ', [PlateCode]'
				SET @SQL = @SQL + ', [AreaId]'
				SET @SQL = @SQL + ', [PhoneCode]'
				SET @SQL = @SQL + ', [ProvinceName]'
				SET @SQL = @SQL + ', [Longitude]'
				SET @SQL = @SQL + ', [Latitude]'
				SET @SQL = @SQL + ', [Type]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [CreateTime]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [UpdateTime]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Province]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProvinceId],'
				SET @SQL = @SQL + ' [RowNumber],'
				SET @SQL = @SQL + ' [AdminId],'
				SET @SQL = @SQL + ' [ObjectId],'
				SET @SQL = @SQL + ' [ParentId],'
				SET @SQL = @SQL + ' [PlateCode],'
				SET @SQL = @SQL + ' [AreaId],'
				SET @SQL = @SQL + ' [PhoneCode],'
				SET @SQL = @SQL + ' [ProvinceName],'
				SET @SQL = @SQL + ' [Longitude],'
				SET @SQL = @SQL + ' [Latitude],'
				SET @SQL = @SQL + ' [Type],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [CreateTime],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [UpdateTime],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Province]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Province_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Province table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProvinceId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PlateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PhoneCode" type="varchar" direction="Input" size="3" precision="0" scale="0" param="(3)" nulldefault=""/>
				<parameter name="@ProvinceName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Type" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Province]
					(
					[RowNumber]
					,[AdminId]
					,[ObjectId]
					,[ParentId]
					,[PlateCode]
					,[AreaId]
					,[PhoneCode]
					,[ProvinceName]
					,[Longitude]
					,[Latitude]
					,[Type]
					,[CreateDate]
					,[CreateTime]
					,[UpdateDate]
					,[UpdateTime]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@RowNumber
					,@AdminId
					,@ObjectId
					,@ParentId
					,@PlateCode
					,@AreaId
					,@PhoneCode
					,@ProvinceName
					,@Longitude
					,@Latitude
					,@Type
					,@CreateDate
					,@CreateTime
					,@UpdateDate
					,@UpdateTime
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @ProvinceId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Province_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Province table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PlateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PhoneCode" type="varchar" direction="Input" size="3" precision="0" scale="0" param="(3)" nulldefault=""/>
				<parameter name="@ProvinceName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Type" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Province]
				SET
					[RowNumber] = @RowNumber
					,[AdminId] = @AdminId
					,[ObjectId] = @ObjectId
					,[ParentId] = @ParentId
					,[PlateCode] = @PlateCode
					,[AreaId] = @AreaId
					,[PhoneCode] = @PhoneCode
					,[ProvinceName] = @ProvinceName
					,[Longitude] = @Longitude
					,[Latitude] = @Latitude
					,[Type] = @Type
					,[CreateDate] = @CreateDate
					,[CreateTime] = @CreateTime
					,[UpdateDate] = @UpdateDate
					,[UpdateTime] = @UpdateTime
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[ProvinceId] = @ProvinceId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Province_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Province table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Province] WITH (ROWLOCK) 
				WHERE
					[ProvinceId] = @ProvinceId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Province_GetByProvinceName" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Province table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProvinceName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProvinceId],
					[RowNumber],
					[AdminId],
					[ObjectId],
					[ParentId],
					[PlateCode],
					[AreaId],
					[PhoneCode],
					[ProvinceName],
					[Longitude],
					[Latitude],
					[Type],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Province]
				WHERE
					[ProvinceName] = @ProvinceName
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Province_GetByProvinceId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Province table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProvinceId],
					[RowNumber],
					[AdminId],
					[ObjectId],
					[ParentId],
					[PlateCode],
					[AreaId],
					[PhoneCode],
					[ProvinceName],
					[Longitude],
					[Latitude],
					[Type],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Province]
				WHERE
					[ProvinceId] = @ProvinceId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Province_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Province table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProvinceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PlateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PhoneCode" type="varchar" direction="Input" size="3" precision="0" scale="0" param="(3)" nulldefault="null"/>
				<parameter name="@ProvinceName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Type" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProvinceId]
	, [RowNumber]
	, [AdminId]
	, [ObjectId]
	, [ParentId]
	, [PlateCode]
	, [AreaId]
	, [PhoneCode]
	, [ProvinceName]
	, [Longitude]
	, [Latitude]
	, [Type]
	, [CreateDate]
	, [CreateTime]
	, [UpdateDate]
	, [UpdateTime]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Province]
    WHERE 
	 ([ProvinceId] = @ProvinceId OR @ProvinceId IS NULL)
	AND ([RowNumber] = @RowNumber OR @RowNumber IS NULL)
	AND ([AdminId] = @AdminId OR @AdminId IS NULL)
	AND ([ObjectId] = @ObjectId OR @ObjectId IS NULL)
	AND ([ParentId] = @ParentId OR @ParentId IS NULL)
	AND ([PlateCode] = @PlateCode OR @PlateCode IS NULL)
	AND ([AreaId] = @AreaId OR @AreaId IS NULL)
	AND ([PhoneCode] = @PhoneCode OR @PhoneCode IS NULL)
	AND ([ProvinceName] = @ProvinceName OR @ProvinceName IS NULL)
	AND ([Longitude] = @Longitude OR @Longitude IS NULL)
	AND ([Latitude] = @Latitude OR @Latitude IS NULL)
	AND ([Type] = @Type OR @Type IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([CreateTime] = @CreateTime OR @CreateTime IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([UpdateTime] = @UpdateTime OR @UpdateTime IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProvinceId]
	, [RowNumber]
	, [AdminId]
	, [ObjectId]
	, [ParentId]
	, [PlateCode]
	, [AreaId]
	, [PhoneCode]
	, [ProvinceName]
	, [Longitude]
	, [Latitude]
	, [Type]
	, [CreateDate]
	, [CreateTime]
	, [UpdateDate]
	, [UpdateTime]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Province]
    WHERE 
	 ([ProvinceId] = @ProvinceId AND @ProvinceId is not null)
	OR ([RowNumber] = @RowNumber AND @RowNumber is not null)
	OR ([AdminId] = @AdminId AND @AdminId is not null)
	OR ([ObjectId] = @ObjectId AND @ObjectId is not null)
	OR ([ParentId] = @ParentId AND @ParentId is not null)
	OR ([PlateCode] = @PlateCode AND @PlateCode is not null)
	OR ([AreaId] = @AreaId AND @AreaId is not null)
	OR ([PhoneCode] = @PhoneCode AND @PhoneCode is not null)
	OR ([ProvinceName] = @ProvinceName AND @ProvinceName is not null)
	OR ([Longitude] = @Longitude AND @Longitude is not null)
	OR ([Latitude] = @Latitude AND @Latitude is not null)
	OR ([Type] = @Type AND @Type is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([CreateTime] = @CreateTime AND @CreateTime is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([UpdateTime] = @UpdateTime AND @UpdateTime is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Province_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Province table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [ProvinceId]
					, [RowNumber]
					, [AdminId]
					, [ObjectId]
					, [ParentId]
					, [PlateCode]
					, [AreaId]
					, [PhoneCode]
					, [ProvinceName]
					, [Longitude]
					, [Latitude]
					, [Type]
					, [CreateDate]
					, [CreateTime]
					, [UpdateDate]
					, [UpdateTime]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Province] {0}
				)
				SELECT
				       [ProvinceId],
				       [RowNumber],
				       [AdminId],
				       [ObjectId],
				       [ParentId],
				       [PlateCode],
				       [AreaId],
				       [PhoneCode],
				       [ProvinceName],
				       [Longitude],
				       [Latitude],
				       [Type],
				       [CreateDate],
				       [CreateTime],
				       [UpdateDate],
				       [UpdateTime],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Province] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_CalendarAge_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the CalendarAge table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CalendarAgeId],
					[AgeDescription],
					[MinValue],
					[MaxValue]
				FROM
					[dbo].[CalendarAge]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_CalendarAge_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the CalendarAge table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CalendarAgeId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CalendarAgeId]'
				SET @SQL = @SQL + ', [AgeDescription]'
				SET @SQL = @SQL + ', [MinValue]'
				SET @SQL = @SQL + ', [MaxValue]'
				SET @SQL = @SQL + ' FROM [dbo].[CalendarAge]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CalendarAgeId],'
				SET @SQL = @SQL + ' [AgeDescription],'
				SET @SQL = @SQL + ' [MinValue],'
				SET @SQL = @SQL + ' [MaxValue]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[CalendarAge]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_CalendarAge_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the CalendarAge table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CalendarAgeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AgeDescription" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@MinValue" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxValue" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[CalendarAge]
					(
					[AgeDescription]
					,[MinValue]
					,[MaxValue]
					)
				VALUES
					(
					@AgeDescription
					,@MinValue
					,@MaxValue
					)
				-- Get the identity value
				SET @CalendarAgeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_CalendarAge_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the CalendarAge table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CalendarAgeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AgeDescription" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@MinValue" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxValue" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[CalendarAge]
				SET
					[AgeDescription] = @AgeDescription
					,[MinValue] = @MinValue
					,[MaxValue] = @MaxValue
				WHERE
[CalendarAgeId] = @CalendarAgeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_CalendarAge_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the CalendarAge table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CalendarAgeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[CalendarAge] WITH (ROWLOCK) 
				WHERE
					[CalendarAgeId] = @CalendarAgeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_CalendarAge_GetByCalendarAgeId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the CalendarAge table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CalendarAgeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CalendarAgeId],
					[AgeDescription],
					[MinValue],
					[MaxValue]
				FROM
					[dbo].[CalendarAge]
				WHERE
					[CalendarAgeId] = @CalendarAgeId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_CalendarAge_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the CalendarAge table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CalendarAgeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AgeDescription" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@MinValue" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MaxValue" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CalendarAgeId]
	, [AgeDescription]
	, [MinValue]
	, [MaxValue]
    FROM
	[dbo].[CalendarAge]
    WHERE 
	 ([CalendarAgeId] = @CalendarAgeId OR @CalendarAgeId IS NULL)
	AND ([AgeDescription] = @AgeDescription OR @AgeDescription IS NULL)
	AND ([MinValue] = @MinValue OR @MinValue IS NULL)
	AND ([MaxValue] = @MaxValue OR @MaxValue IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CalendarAgeId]
	, [AgeDescription]
	, [MinValue]
	, [MaxValue]
    FROM
	[dbo].[CalendarAge]
    WHERE 
	 ([CalendarAgeId] = @CalendarAgeId AND @CalendarAgeId is not null)
	OR ([AgeDescription] = @AgeDescription AND @AgeDescription is not null)
	OR ([MinValue] = @MinValue AND @MinValue is not null)
	OR ([MaxValue] = @MaxValue AND @MaxValue is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_CalendarAge_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the CalendarAge table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [CalendarAgeId]
					, [AgeDescription]
					, [MinValue]
					, [MaxValue]
					FROM [dbo].[CalendarAge] {0}
				)
				SELECT
				       [CalendarAgeId],
				       [AgeDescription],
				       [MinValue],
				       [MaxValue]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[CalendarAge] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="CalendarAge_GetByYearAndMonth"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@Year" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Month" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	IF(ISNULL(@Year,0) > 0)
	BEGIN
		SELECT 
			a.*
		FROM
			dbo.CalendarAge a (NOLOCK)
		WHERE
			@Year = a.MinValue
		AND	a.MaxValue IS NULL
	END
	ELSE IF(ISNULL(@Month,0) > 0)
	BEGIN
		SELECT 
			a.*
		FROM
			dbo.CalendarAge a (NOLOCK)
		WHERE
			@Month BETWEEN a.MinValue AND a.MaxValue;
	END
	ELSE IF(ISNULL(@Year,0) > 0)
	BEGIN
		SELECT 
			a.*
		FROM
			dbo.CalendarAge a (NOLOCK)
		WHERE
			@Year = a.MinValue
		AND	a.MaxValue IS NULL
	END
END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="sp_Client_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Client table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ClientId],
					[FileNumber],
					[FirstContactDate],
					[FirstContactAge],
					[CurrentAge],
					[BirthDate],
					[CalendarAgeId],
					[FullName],
					[MiddleName],
					[Reference],
					[MotherId],
					[FatherId],
					[AddressId],
					[IdCard],
					[Gender],
					[Blood],
					[Pediatrician],
					[CountOfChild],
					[FamilyStatus],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Client]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Client_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Client table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ClientId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ClientId]'
				SET @SQL = @SQL + ', [FileNumber]'
				SET @SQL = @SQL + ', [FirstContactDate]'
				SET @SQL = @SQL + ', [FirstContactAge]'
				SET @SQL = @SQL + ', [CurrentAge]'
				SET @SQL = @SQL + ', [BirthDate]'
				SET @SQL = @SQL + ', [CalendarAgeId]'
				SET @SQL = @SQL + ', [FullName]'
				SET @SQL = @SQL + ', [MiddleName]'
				SET @SQL = @SQL + ', [Reference]'
				SET @SQL = @SQL + ', [MotherId]'
				SET @SQL = @SQL + ', [FatherId]'
				SET @SQL = @SQL + ', [AddressId]'
				SET @SQL = @SQL + ', [IdCard]'
				SET @SQL = @SQL + ', [Gender]'
				SET @SQL = @SQL + ', [Blood]'
				SET @SQL = @SQL + ', [Pediatrician]'
				SET @SQL = @SQL + ', [CountOfChild]'
				SET @SQL = @SQL + ', [FamilyStatus]'
				SET @SQL = @SQL + ', [Notes]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Client]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ClientId],'
				SET @SQL = @SQL + ' [FileNumber],'
				SET @SQL = @SQL + ' [FirstContactDate],'
				SET @SQL = @SQL + ' [FirstContactAge],'
				SET @SQL = @SQL + ' [CurrentAge],'
				SET @SQL = @SQL + ' [BirthDate],'
				SET @SQL = @SQL + ' [CalendarAgeId],'
				SET @SQL = @SQL + ' [FullName],'
				SET @SQL = @SQL + ' [MiddleName],'
				SET @SQL = @SQL + ' [Reference],'
				SET @SQL = @SQL + ' [MotherId],'
				SET @SQL = @SQL + ' [FatherId],'
				SET @SQL = @SQL + ' [AddressId],'
				SET @SQL = @SQL + ' [IdCard],'
				SET @SQL = @SQL + ' [Gender],'
				SET @SQL = @SQL + ' [Blood],'
				SET @SQL = @SQL + ' [Pediatrician],'
				SET @SQL = @SQL + ' [CountOfChild],'
				SET @SQL = @SQL + ' [FamilyStatus],'
				SET @SQL = @SQL + ' [Notes],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Client]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Client_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Client table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FileNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FirstContactDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@FirstContactAge" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrentAge" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BirthDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CalendarAgeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@MiddleName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Reference" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@MotherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FatherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AddressId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IdCard" type="varchar" direction="Input" size="11" precision="0" scale="0" param="(11)" nulldefault=""/>
				<parameter name="@Gender" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Blood" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Pediatrician" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CountOfChild" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FamilyStatus" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Client]
					(
					[FileNumber]
					,[FirstContactDate]
					,[FirstContactAge]
					,[CurrentAge]
					,[BirthDate]
					,[CalendarAgeId]
					,[FullName]
					,[MiddleName]
					,[Reference]
					,[MotherId]
					,[FatherId]
					,[AddressId]
					,[IdCard]
					,[Gender]
					,[Blood]
					,[Pediatrician]
					,[CountOfChild]
					,[FamilyStatus]
					,[Notes]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@FileNumber
					,@FirstContactDate
					,@FirstContactAge
					,@CurrentAge
					,@BirthDate
					,@CalendarAgeId
					,@FullName
					,@MiddleName
					,@Reference
					,@MotherId
					,@FatherId
					,@AddressId
					,@IdCard
					,@Gender
					,@Blood
					,@Pediatrician
					,@CountOfChild
					,@FamilyStatus
					,@Notes
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @ClientId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Client_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Client table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FileNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FirstContactDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@FirstContactAge" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CurrentAge" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BirthDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CalendarAgeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FullName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@MiddleName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Reference" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@MotherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FatherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AddressId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IdCard" type="varchar" direction="Input" size="11" precision="0" scale="0" param="(11)" nulldefault=""/>
				<parameter name="@Gender" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Blood" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Pediatrician" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CountOfChild" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FamilyStatus" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Client]
				SET
					[FileNumber] = @FileNumber
					,[FirstContactDate] = @FirstContactDate
					,[FirstContactAge] = @FirstContactAge
					,[CurrentAge] = @CurrentAge
					,[BirthDate] = @BirthDate
					,[CalendarAgeId] = @CalendarAgeId
					,[FullName] = @FullName
					,[MiddleName] = @MiddleName
					,[Reference] = @Reference
					,[MotherId] = @MotherId
					,[FatherId] = @FatherId
					,[AddressId] = @AddressId
					,[IdCard] = @IdCard
					,[Gender] = @Gender
					,[Blood] = @Blood
					,[Pediatrician] = @Pediatrician
					,[CountOfChild] = @CountOfChild
					,[FamilyStatus] = @FamilyStatus
					,[Notes] = @Notes
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[ClientId] = @ClientId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Client_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Client table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Client] WITH (ROWLOCK) 
				WHERE
					[ClientId] = @ClientId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Client_GetByAddressId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Client table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddressId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ClientId],
					[FileNumber],
					[FirstContactDate],
					[FirstContactAge],
					[CurrentAge],
					[BirthDate],
					[CalendarAgeId],
					[FullName],
					[MiddleName],
					[Reference],
					[MotherId],
					[FatherId],
					[AddressId],
					[IdCard],
					[Gender],
					[Blood],
					[Pediatrician],
					[CountOfChild],
					[FamilyStatus],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Client]
				WHERE
					[AddressId] = @AddressId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Client_GetByFatherId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Client table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FatherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ClientId],
					[FileNumber],
					[FirstContactDate],
					[FirstContactAge],
					[CurrentAge],
					[BirthDate],
					[CalendarAgeId],
					[FullName],
					[MiddleName],
					[Reference],
					[MotherId],
					[FatherId],
					[AddressId],
					[IdCard],
					[Gender],
					[Blood],
					[Pediatrician],
					[CountOfChild],
					[FamilyStatus],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Client]
				WHERE
					[FatherId] = @FatherId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Client_GetByMotherId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Client table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MotherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ClientId],
					[FileNumber],
					[FirstContactDate],
					[FirstContactAge],
					[CurrentAge],
					[BirthDate],
					[CalendarAgeId],
					[FullName],
					[MiddleName],
					[Reference],
					[MotherId],
					[FatherId],
					[AddressId],
					[IdCard],
					[Gender],
					[Blood],
					[Pediatrician],
					[CountOfChild],
					[FamilyStatus],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Client]
				WHERE
					[MotherId] = @MotherId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Client_GetByFileNumber" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Client table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FileNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ClientId],
					[FileNumber],
					[FirstContactDate],
					[FirstContactAge],
					[CurrentAge],
					[BirthDate],
					[CalendarAgeId],
					[FullName],
					[MiddleName],
					[Reference],
					[MotherId],
					[FatherId],
					[AddressId],
					[IdCard],
					[Gender],
					[Blood],
					[Pediatrician],
					[CountOfChild],
					[FamilyStatus],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Client]
				WHERE
					[FileNumber] = @FileNumber
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Client_GetByClientId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Client table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ClientId],
					[FileNumber],
					[FirstContactDate],
					[FirstContactAge],
					[CurrentAge],
					[BirthDate],
					[CalendarAgeId],
					[FullName],
					[MiddleName],
					[Reference],
					[MotherId],
					[FatherId],
					[AddressId],
					[IdCard],
					[Gender],
					[Blood],
					[Pediatrician],
					[CountOfChild],
					[FamilyStatus],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Client]
				WHERE
					[ClientId] = @ClientId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Client_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Client table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FileNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FirstContactDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@FirstContactAge" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CurrentAge" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@BirthDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CalendarAgeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FullName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@MiddleName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Reference" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@MotherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FatherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddressId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IdCard" type="varchar" direction="Input" size="11" precision="0" scale="0" param="(11)" nulldefault="null"/>
				<parameter name="@Gender" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@Blood" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@Pediatrician" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CountOfChild" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FamilyStatus" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@Notes" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ClientId]
	, [FileNumber]
	, [FirstContactDate]
	, [FirstContactAge]
	, [CurrentAge]
	, [BirthDate]
	, [CalendarAgeId]
	, [FullName]
	, [MiddleName]
	, [Reference]
	, [MotherId]
	, [FatherId]
	, [AddressId]
	, [IdCard]
	, [Gender]
	, [Blood]
	, [Pediatrician]
	, [CountOfChild]
	, [FamilyStatus]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Client]
    WHERE 
	 ([ClientId] = @ClientId OR @ClientId IS NULL)
	AND ([FileNumber] = @FileNumber OR @FileNumber IS NULL)
	AND ([FirstContactDate] = @FirstContactDate OR @FirstContactDate IS NULL)
	AND ([FirstContactAge] = @FirstContactAge OR @FirstContactAge IS NULL)
	AND ([CurrentAge] = @CurrentAge OR @CurrentAge IS NULL)
	AND ([BirthDate] = @BirthDate OR @BirthDate IS NULL)
	AND ([CalendarAgeId] = @CalendarAgeId OR @CalendarAgeId IS NULL)
	AND ([FullName] = @FullName OR @FullName IS NULL)
	AND ([MiddleName] = @MiddleName OR @MiddleName IS NULL)
	AND ([Reference] = @Reference OR @Reference IS NULL)
	AND ([MotherId] = @MotherId OR @MotherId IS NULL)
	AND ([FatherId] = @FatherId OR @FatherId IS NULL)
	AND ([AddressId] = @AddressId OR @AddressId IS NULL)
	AND ([IdCard] = @IdCard OR @IdCard IS NULL)
	AND ([Gender] = @Gender OR @Gender IS NULL)
	AND ([Blood] = @Blood OR @Blood IS NULL)
	AND ([Pediatrician] = @Pediatrician OR @Pediatrician IS NULL)
	AND ([CountOfChild] = @CountOfChild OR @CountOfChild IS NULL)
	AND ([FamilyStatus] = @FamilyStatus OR @FamilyStatus IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ClientId]
	, [FileNumber]
	, [FirstContactDate]
	, [FirstContactAge]
	, [CurrentAge]
	, [BirthDate]
	, [CalendarAgeId]
	, [FullName]
	, [MiddleName]
	, [Reference]
	, [MotherId]
	, [FatherId]
	, [AddressId]
	, [IdCard]
	, [Gender]
	, [Blood]
	, [Pediatrician]
	, [CountOfChild]
	, [FamilyStatus]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Client]
    WHERE 
	 ([ClientId] = @ClientId AND @ClientId is not null)
	OR ([FileNumber] = @FileNumber AND @FileNumber is not null)
	OR ([FirstContactDate] = @FirstContactDate AND @FirstContactDate is not null)
	OR ([FirstContactAge] = @FirstContactAge AND @FirstContactAge is not null)
	OR ([CurrentAge] = @CurrentAge AND @CurrentAge is not null)
	OR ([BirthDate] = @BirthDate AND @BirthDate is not null)
	OR ([CalendarAgeId] = @CalendarAgeId AND @CalendarAgeId is not null)
	OR ([FullName] = @FullName AND @FullName is not null)
	OR ([MiddleName] = @MiddleName AND @MiddleName is not null)
	OR ([Reference] = @Reference AND @Reference is not null)
	OR ([MotherId] = @MotherId AND @MotherId is not null)
	OR ([FatherId] = @FatherId AND @FatherId is not null)
	OR ([AddressId] = @AddressId AND @AddressId is not null)
	OR ([IdCard] = @IdCard AND @IdCard is not null)
	OR ([Gender] = @Gender AND @Gender is not null)
	OR ([Blood] = @Blood AND @Blood is not null)
	OR ([Pediatrician] = @Pediatrician AND @Pediatrician is not null)
	OR ([CountOfChild] = @CountOfChild AND @CountOfChild is not null)
	OR ([FamilyStatus] = @FamilyStatus AND @FamilyStatus is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Client_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Client table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [ClientId]
					, [FileNumber]
					, [FirstContactDate]
					, [FirstContactAge]
					, [CurrentAge]
					, [BirthDate]
					, [CalendarAgeId]
					, [FullName]
					, [MiddleName]
					, [Reference]
					, [MotherId]
					, [FatherId]
					, [AddressId]
					, [IdCard]
					, [Gender]
					, [Blood]
					, [Pediatrician]
					, [CountOfChild]
					, [FamilyStatus]
					, [Notes]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Client] {0}
				)
				SELECT
				       [ClientId],
				       [FileNumber],
				       [FirstContactDate],
				       [FirstContactAge],
				       [CurrentAge],
				       [BirthDate],
				       [CalendarAgeId],
				       [FullName],
				       [MiddleName],
				       [Reference],
				       [MotherId],
				       [FatherId],
				       [AddressId],
				       [IdCard],
				       [Gender],
				       [Blood],
				       [Pediatrician],
				       [CountOfChild],
				       [FamilyStatus],
				       [Notes],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Client] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="Client_FindByReason_FirstDate_BirthDate"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@SeanceReasonIds" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@FirstContactYears" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@BirthDateYears" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
onIds IS NULL)
		AND	(YEAR(c.FirstContactDate) IN (SELECT Item FROM dbo.Split(@FirstContactYears,',')) OR @FirstContactYears IS NULL)
		AND	(YEAR(c.BirthDate) IN (SELECT Item FROM dbo.Split(@BirthDateYears,',')) OR @BirthDateYears IS NULL)
	GROUP BY
		c.ClientID,
		c.FileNumber,
		c.FullName,
		a.FullName,
		c.FirstContactDate,
		c.Gender, 
		c.BirthDate, 
		c.Pediatrician,
		f.FullName,
		f.BusinessPhone,
		f.HomePhone,
		f.MobilePhone,
		f.Email,
		m.FullName,
		m.BusinessPhone,
		m.HomePhone,
		m.MobilePhone,
		m.Email
	ORDER BY
		c.FileNumber 
	DESC
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Client_AdvisorReport"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@AdvisorIds" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
onValueList
	FROM
		dbo.Client c (NOLOCK)
	INNER JOIN
		dbo.Seance s (NOLOCK) ON s.ClientID = c.ClientID
	WHERE
		s.AdvisorID IN (SELECT Item FROM dbo.Split(@AdvisorIds,','))
	ORDER BY
		s.ClientID,
		s.SeanceDate 
	DESC
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Client_GetAllFirstContactYears"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT DISTINCT 
		YEAR(c.FirstContactDate)
	FROM 
		Client c (NOLOCK) 
	WHERE 
		YEAR(c.FirstContactDate) <= YEAR(GETDATE())
	ORDER BY 
		1 DESC
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Client_GetByFirstContactYears"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
				<parameter name="@Years" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT 
		c.* 
	FROM 
		Client c (NOLOCK)
	WHERE 
		YEAR(c.FirstContactDate) IN (
			SELECT Item FROM Split(@Years,',')
		)
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Client_GetAllBirthDateYears"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT DISTINCT 
		YEAR(c.BirthDate)
	FROM 
		Client c (NOLOCK) 
	WHERE 
		YEAR(c.BirthDate) < = YEAR(GETDATE())
	ORDER BY 
		1 DESC
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Client_GetFirst"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
C
END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Client_GetFileNumbers"  skip="true">
			<comment><![CDATA[]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT c.FileNumber FROM Client c (NOLOCK)
END
			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="Client_GetLast"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
			</parameters>
			<body><![CDATA[
				
BEGIN
	SELECT 
		TOP 1 * 
	FROM 
		Client c (NOLOCK)
	ORDER BY 
		c.FileNumber 
	DESC
END
			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="sp_ClientEducation_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the ClientEducation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[EducationId],
					[ClientId],
					[SchoolId],
					[ClassRoom],
					[TeacherId],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientEducation]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ClientEducation_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ClientEducation table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[EducationId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [EducationId]'
				SET @SQL = @SQL + ', [ClientId]'
				SET @SQL = @SQL + ', [SchoolId]'
				SET @SQL = @SQL + ', [ClassRoom]'
				SET @SQL = @SQL + ', [TeacherId]'
				SET @SQL = @SQL + ', [Notes]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[ClientEducation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [EducationId],'
				SET @SQL = @SQL + ' [ClientId],'
				SET @SQL = @SQL + ' [SchoolId],'
				SET @SQL = @SQL + ' [ClassRoom],'
				SET @SQL = @SQL + ' [TeacherId],'
				SET @SQL = @SQL + ' [Notes],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ClientEducation]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_ClientEducation_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the ClientEducation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClassRoom" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@TeacherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ClientEducation]
					(
					[ClientId]
					,[SchoolId]
					,[ClassRoom]
					,[TeacherId]
					,[Notes]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@ClientId
					,@SchoolId
					,@ClassRoom
					,@TeacherId
					,@Notes
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @EducationId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientEducation_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the ClientEducation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClassRoom" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@TeacherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ClientEducation]
				SET
					[ClientId] = @ClientId
					,[SchoolId] = @SchoolId
					,[ClassRoom] = @ClassRoom
					,[TeacherId] = @TeacherId
					,[Notes] = @Notes
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[EducationId] = @EducationId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientEducation_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the ClientEducation table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ClientEducation] WITH (ROWLOCK) 
				WHERE
					[EducationId] = @EducationId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientEducation_GetByClientId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ClientEducation table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[EducationId],
					[ClientId],
					[SchoolId],
					[ClassRoom],
					[TeacherId],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientEducation]
				WHERE
					[ClientId] = @ClientId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientEducation_GetBySchoolId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ClientEducation table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[EducationId],
					[ClientId],
					[SchoolId],
					[ClassRoom],
					[TeacherId],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientEducation]
				WHERE
					[SchoolId] = @SchoolId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ClientEducation_GetByEducationId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ClientEducation table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[EducationId],
					[ClientId],
					[SchoolId],
					[ClassRoom],
					[TeacherId],
					[Notes],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ClientEducation]
				WHERE
					[EducationId] = @EducationId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_ClientEducation_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the ClientEducation table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EducationId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SchoolId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClassRoom" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@TeacherId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Notes" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [EducationId]
	, [ClientId]
	, [SchoolId]
	, [ClassRoom]
	, [TeacherId]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ClientEducation]
    WHERE 
	 ([EducationId] = @EducationId OR @EducationId IS NULL)
	AND ([ClientId] = @ClientId OR @ClientId IS NULL)
	AND ([SchoolId] = @SchoolId OR @SchoolId IS NULL)
	AND ([ClassRoom] = @ClassRoom OR @ClassRoom IS NULL)
	AND ([TeacherId] = @TeacherId OR @TeacherId IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [EducationId]
	, [ClientId]
	, [SchoolId]
	, [ClassRoom]
	, [TeacherId]
	, [Notes]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ClientEducation]
    WHERE 
	 ([EducationId] = @EducationId AND @EducationId is not null)
	OR ([ClientId] = @ClientId AND @ClientId is not null)
	OR ([SchoolId] = @SchoolId AND @SchoolId is not null)
	OR ([ClassRoom] = @ClassRoom AND @ClassRoom is not null)
	OR ([TeacherId] = @TeacherId AND @TeacherId is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_ClientEducation_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ClientEducation table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [EducationId]
					, [ClientId]
					, [SchoolId]
					, [ClassRoom]
					, [TeacherId]
					, [Notes]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[ClientEducation] {0}
				)
				SELECT
				       [EducationId],
				       [ClientId],
				       [SchoolId],
				       [ClassRoom],
				       [TeacherId],
				       [Notes],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ClientEducation] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Area_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Area table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AreaId],
					[AreaName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Area]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Area_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Area table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AreaId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AreaId]'
				SET @SQL = @SQL + ', [AreaName]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Area]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AreaId],'
				SET @SQL = @SQL + ' [AreaName],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Area]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Area_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Area table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Area]
					(
					[AreaName]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@AreaName
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @AreaId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Area_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Area table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Area]
				SET
					[AreaName] = @AreaName
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[AreaId] = @AreaId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Area_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Area table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Area] WITH (ROWLOCK) 
				WHERE
					[AreaId] = @AreaId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Area_GetByAreaId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Area table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AreaId],
					[AreaName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Area]
				WHERE
					[AreaId] = @AreaId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Area_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Area table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AreaName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AreaId]
	, [AreaName]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Area]
    WHERE 
	 ([AreaId] = @AreaId OR @AreaId IS NULL)
	AND ([AreaName] = @AreaName OR @AreaName IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AreaId]
	, [AreaName]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Area]
    WHERE 
	 ([AreaId] = @AreaId AND @AreaId is not null)
	OR ([AreaName] = @AreaName AND @AreaName is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Area_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Area table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [AreaId]
					, [AreaName]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Area] {0}
				)
				SELECT
				       [AreaId],
				       [AreaName],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Area] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Job_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Job table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[JobId],
					[JobCode],
					[JobName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Job]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Job_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Job table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[JobId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [JobId]'
				SET @SQL = @SQL + ', [JobCode]'
				SET @SQL = @SQL + ', [JobName]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Job]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [JobId],'
				SET @SQL = @SQL + ' [JobCode],'
				SET @SQL = @SQL + ' [JobName],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Job]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Job_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Job table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Job]
					(
					[JobCode]
					,[JobName]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@JobCode
					,@JobName
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @JobId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Job_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Job table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JobCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Job]
				SET
					[JobCode] = @JobCode
					,[JobName] = @JobName
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[JobId] = @JobId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Job_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Job table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Job] WITH (ROWLOCK) 
				WHERE
					[JobId] = @JobId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Job_GetByJobName" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Job table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobId],
					[JobCode],
					[JobName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Job]
				WHERE
					[JobName] = @JobName
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Job_GetByJobId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Job table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[JobId],
					[JobCode],
					[JobName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Job]
				WHERE
					[JobId] = @JobId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Job_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Job table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JobCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@JobName" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [JobId]
	, [JobCode]
	, [JobName]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Job]
    WHERE 
	 ([JobId] = @JobId OR @JobId IS NULL)
	AND ([JobCode] = @JobCode OR @JobCode IS NULL)
	AND ([JobName] = @JobName OR @JobName IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [JobId]
	, [JobCode]
	, [JobName]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Job]
    WHERE 
	 ([JobId] = @JobId AND @JobId is not null)
	OR ([JobCode] = @JobCode AND @JobCode is not null)
	OR ([JobName] = @JobName AND @JobName is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Job_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Job table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [JobId]
					, [JobCode]
					, [JobName]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Job] {0}
				)
				SELECT
				       [JobId],
				       [JobCode],
				       [JobName],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Job] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Neighborhood_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Neighborhood table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[NeighborhoodId],
					[AdminId],
					[ObjectId],
					[ParentId],
					[RowNumber],
					[TownId],
					[NeighborhoodName],
					[Longitude],
					[Latitude],
					[Type],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Neighborhood]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Neighborhood_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Neighborhood table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[NeighborhoodId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [NeighborhoodId]'
				SET @SQL = @SQL + ', [AdminId]'
				SET @SQL = @SQL + ', [ObjectId]'
				SET @SQL = @SQL + ', [ParentId]'
				SET @SQL = @SQL + ', [RowNumber]'
				SET @SQL = @SQL + ', [TownId]'
				SET @SQL = @SQL + ', [NeighborhoodName]'
				SET @SQL = @SQL + ', [Longitude]'
				SET @SQL = @SQL + ', [Latitude]'
				SET @SQL = @SQL + ', [Type]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [CreateTime]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [UpdateTime]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Neighborhood]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [NeighborhoodId],'
				SET @SQL = @SQL + ' [AdminId],'
				SET @SQL = @SQL + ' [ObjectId],'
				SET @SQL = @SQL + ' [ParentId],'
				SET @SQL = @SQL + ' [RowNumber],'
				SET @SQL = @SQL + ' [TownId],'
				SET @SQL = @SQL + ' [NeighborhoodName],'
				SET @SQL = @SQL + ' [Longitude],'
				SET @SQL = @SQL + ' [Latitude],'
				SET @SQL = @SQL + ' [Type],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [CreateTime],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [UpdateTime],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Neighborhood]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Neighborhood_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Neighborhood table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NeighborhoodId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NeighborhoodName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Type" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Neighborhood]
					(
					[AdminId]
					,[ObjectId]
					,[ParentId]
					,[RowNumber]
					,[TownId]
					,[NeighborhoodName]
					,[Longitude]
					,[Latitude]
					,[Type]
					,[CreateDate]
					,[CreateTime]
					,[UpdateDate]
					,[UpdateTime]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@AdminId
					,@ObjectId
					,@ParentId
					,@RowNumber
					,@TownId
					,@NeighborhoodName
					,@Longitude
					,@Latitude
					,@Type
					,@CreateDate
					,@CreateTime
					,@UpdateDate
					,@UpdateTime
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @NeighborhoodId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Neighborhood_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Neighborhood table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NeighborhoodName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Type" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Neighborhood]
				SET
					[AdminId] = @AdminId
					,[ObjectId] = @ObjectId
					,[ParentId] = @ParentId
					,[RowNumber] = @RowNumber
					,[TownId] = @TownId
					,[NeighborhoodName] = @NeighborhoodName
					,[Longitude] = @Longitude
					,[Latitude] = @Latitude
					,[Type] = @Type
					,[CreateDate] = @CreateDate
					,[CreateTime] = @CreateTime
					,[UpdateDate] = @UpdateDate
					,[UpdateTime] = @UpdateTime
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[NeighborhoodId] = @NeighborhoodId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Neighborhood_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Neighborhood table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Neighborhood] WITH (ROWLOCK) 
				WHERE
					[NeighborhoodId] = @NeighborhoodId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Neighborhood_GetByTownId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Neighborhood table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[NeighborhoodId],
					[AdminId],
					[ObjectId],
					[ParentId],
					[RowNumber],
					[TownId],
					[NeighborhoodName],
					[Longitude],
					[Latitude],
					[Type],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Neighborhood]
				WHERE
					[TownId] = @TownId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Neighborhood_GetByNeighborhoodId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Neighborhood table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[NeighborhoodId],
					[AdminId],
					[ObjectId],
					[ParentId],
					[RowNumber],
					[TownId],
					[NeighborhoodName],
					[Longitude],
					[Latitude],
					[Type],
					[CreateDate],
					[CreateTime],
					[UpdateDate],
					[UpdateTime],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Neighborhood]
				WHERE
					[NeighborhoodId] = @NeighborhoodId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Neighborhood_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Neighborhood table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NeighborhoodId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ObjectId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@RowNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TownId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NeighborhoodName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@Longitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Latitude" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Type" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="date" direction="Input" size="3" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [NeighborhoodId]
	, [AdminId]
	, [ObjectId]
	, [ParentId]
	, [RowNumber]
	, [TownId]
	, [NeighborhoodName]
	, [Longitude]
	, [Latitude]
	, [Type]
	, [CreateDate]
	, [CreateTime]
	, [UpdateDate]
	, [UpdateTime]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Neighborhood]
    WHERE 
	 ([NeighborhoodId] = @NeighborhoodId OR @NeighborhoodId IS NULL)
	AND ([AdminId] = @AdminId OR @AdminId IS NULL)
	AND ([ObjectId] = @ObjectId OR @ObjectId IS NULL)
	AND ([ParentId] = @ParentId OR @ParentId IS NULL)
	AND ([RowNumber] = @RowNumber OR @RowNumber IS NULL)
	AND ([TownId] = @TownId OR @TownId IS NULL)
	AND ([NeighborhoodName] = @NeighborhoodName OR @NeighborhoodName IS NULL)
	AND ([Longitude] = @Longitude OR @Longitude IS NULL)
	AND ([Latitude] = @Latitude OR @Latitude IS NULL)
	AND ([Type] = @Type OR @Type IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([CreateTime] = @CreateTime OR @CreateTime IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([UpdateTime] = @UpdateTime OR @UpdateTime IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [NeighborhoodId]
	, [AdminId]
	, [ObjectId]
	, [ParentId]
	, [RowNumber]
	, [TownId]
	, [NeighborhoodName]
	, [Longitude]
	, [Latitude]
	, [Type]
	, [CreateDate]
	, [CreateTime]
	, [UpdateDate]
	, [UpdateTime]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Neighborhood]
    WHERE 
	 ([NeighborhoodId] = @NeighborhoodId AND @NeighborhoodId is not null)
	OR ([AdminId] = @AdminId AND @AdminId is not null)
	OR ([ObjectId] = @ObjectId AND @ObjectId is not null)
	OR ([ParentId] = @ParentId AND @ParentId is not null)
	OR ([RowNumber] = @RowNumber AND @RowNumber is not null)
	OR ([TownId] = @TownId AND @TownId is not null)
	OR ([NeighborhoodName] = @NeighborhoodName AND @NeighborhoodName is not null)
	OR ([Longitude] = @Longitude AND @Longitude is not null)
	OR ([Latitude] = @Latitude AND @Latitude is not null)
	OR ([Type] = @Type AND @Type is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([CreateTime] = @CreateTime AND @CreateTime is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([UpdateTime] = @UpdateTime AND @UpdateTime is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Neighborhood_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Neighborhood table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [NeighborhoodId]
					, [AdminId]
					, [ObjectId]
					, [ParentId]
					, [RowNumber]
					, [TownId]
					, [NeighborhoodName]
					, [Longitude]
					, [Latitude]
					, [Type]
					, [CreateDate]
					, [CreateTime]
					, [UpdateDate]
					, [UpdateTime]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Neighborhood] {0}
				)
				SELECT
				       [NeighborhoodId],
				       [AdminId],
				       [ObjectId],
				       [ParentId],
				       [RowNumber],
				       [TownId],
				       [NeighborhoodName],
				       [Longitude],
				       [Latitude],
				       [Type],
				       [CreateDate],
				       [CreateTime],
				       [UpdateDate],
				       [UpdateTime],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Neighborhood] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_QuestionFormOption_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the QuestionFormOption table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[OptionId],
					[QuestionId],
					[OptionName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormOption]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_QuestionFormOption_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the QuestionFormOption table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[OptionId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [OptionId]'
				SET @SQL = @SQL + ', [QuestionId]'
				SET @SQL = @SQL + ', [OptionName]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[QuestionFormOption]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [OptionId],'
				SET @SQL = @SQL + ' [QuestionId],'
				SET @SQL = @SQL + ' [OptionName],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[QuestionFormOption]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_QuestionFormOption_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the QuestionFormOption table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionName" type="varchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[QuestionFormOption]
					(
					[QuestionId]
					,[OptionName]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@QuestionId
					,@OptionName
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @OptionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormOption_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the QuestionFormOption table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionName" type="varchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[QuestionFormOption]
				SET
					[QuestionId] = @QuestionId
					,[OptionName] = @OptionName
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[OptionId] = @OptionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormOption_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the QuestionFormOption table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[QuestionFormOption] WITH (ROWLOCK) 
				WHERE
					[OptionId] = @OptionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormOption_GetByQuestionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the QuestionFormOption table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OptionId],
					[QuestionId],
					[OptionName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormOption]
				WHERE
					[QuestionId] = @QuestionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormOption_GetByOptionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the QuestionFormOption table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OptionId],
					[QuestionId],
					[OptionName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormOption]
				WHERE
					[OptionId] = @OptionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormOption_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the QuestionFormOption table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OptionName" type="varchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OptionId]
	, [QuestionId]
	, [OptionName]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[QuestionFormOption]
    WHERE 
	 ([OptionId] = @OptionId OR @OptionId IS NULL)
	AND ([QuestionId] = @QuestionId OR @QuestionId IS NULL)
	AND ([OptionName] = @OptionName OR @OptionName IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OptionId]
	, [QuestionId]
	, [OptionName]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[QuestionFormOption]
    WHERE 
	 ([OptionId] = @OptionId AND @OptionId is not null)
	OR ([QuestionId] = @QuestionId AND @QuestionId is not null)
	OR ([OptionName] = @OptionName AND @OptionName is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_QuestionFormOption_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the QuestionFormOption table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [OptionId]
					, [QuestionId]
					, [OptionName]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[QuestionFormOption] {0}
				)
				SELECT
				       [OptionId],
				       [QuestionId],
				       [OptionName],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[QuestionFormOption] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_QuestionFormAnswer_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the QuestionFormAnswer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormAnswer]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_QuestionFormAnswer_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the QuestionFormAnswer table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[RowId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [RowId]'
				SET @SQL = @SQL + ', [ClientId]'
				SET @SQL = @SQL + ', [QuestionId]'
				SET @SQL = @SQL + ', [OptionId]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[QuestionFormAnswer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [RowId],'
				SET @SQL = @SQL + ' [ClientId],'
				SET @SQL = @SQL + ' [QuestionId],'
				SET @SQL = @SQL + ' [OptionId],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[QuestionFormAnswer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_QuestionFormAnswer_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the QuestionFormAnswer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[QuestionFormAnswer]
					(
					[ClientId]
					,[QuestionId]
					,[OptionId]
					,[Description]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@ClientId
					,@QuestionId
					,@OptionId
					,@Description
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @RowId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormAnswer_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the QuestionFormAnswer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[QuestionFormAnswer]
				SET
					[ClientId] = @ClientId
					,[QuestionId] = @QuestionId
					,[OptionId] = @OptionId
					,[Description] = @Description
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[RowId] = @RowId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormAnswer_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the QuestionFormAnswer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[QuestionFormAnswer] WITH (ROWLOCK) 
				WHERE
					[RowId] = @RowId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormAnswer_GetByClientId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the QuestionFormAnswer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormAnswer]
				WHERE
					[ClientId] = @ClientId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormAnswer_GetByQuestionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the QuestionFormAnswer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormAnswer]
				WHERE
					[QuestionId] = @QuestionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormAnswer_GetByOptionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the QuestionFormAnswer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormAnswer]
				WHERE
					[OptionId] = @OptionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormAnswer_GetByRowId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the QuestionFormAnswer table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[QuestionFormAnswer]
				WHERE
					[RowId] = @RowId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_QuestionFormAnswer_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the QuestionFormAnswer table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [RowId]
	, [ClientId]
	, [QuestionId]
	, [OptionId]
	, [Description]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[QuestionFormAnswer]
    WHERE 
	 ([RowId] = @RowId OR @RowId IS NULL)
	AND ([ClientId] = @ClientId OR @ClientId IS NULL)
	AND ([QuestionId] = @QuestionId OR @QuestionId IS NULL)
	AND ([OptionId] = @OptionId OR @OptionId IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [RowId]
	, [ClientId]
	, [QuestionId]
	, [OptionId]
	, [Description]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[QuestionFormAnswer]
    WHERE 
	 ([RowId] = @RowId AND @RowId is not null)
	OR ([ClientId] = @ClientId AND @ClientId is not null)
	OR ([QuestionId] = @QuestionId AND @QuestionId is not null)
	OR ([OptionId] = @OptionId AND @OptionId is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_QuestionFormAnswer_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the QuestionFormAnswer table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [RowId]
					, [ClientId]
					, [QuestionId]
					, [OptionId]
					, [Description]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[QuestionFormAnswer] {0}
				)
				SELECT
				       [RowId],
				       [ClientId],
				       [QuestionId],
				       [OptionId],
				       [Description],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[QuestionFormAnswer] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ObservationForm_Group_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the ObservationForm_Group table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[GroupId],
					[GroupName],
					[LineNumber],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Group]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ObservationForm_Group_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ObservationForm_Group table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[GroupId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [GroupId]'
				SET @SQL = @SQL + ', [GroupName]'
				SET @SQL = @SQL + ', [LineNumber]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[ObservationForm_Group]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [GroupId],'
				SET @SQL = @SQL + ' [GroupName],'
				SET @SQL = @SQL + ' [LineNumber],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ObservationForm_Group]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_ObservationForm_Group_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the ObservationForm_Group table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GroupName" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ObservationForm_Group]
					(
					[GroupName]
					,[LineNumber]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@GroupName
					,@LineNumber
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @GroupId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Group_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the ObservationForm_Group table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GroupName" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ObservationForm_Group]
				SET
					[GroupName] = @GroupName
					,[LineNumber] = @LineNumber
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[GroupId] = @GroupId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Group_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the ObservationForm_Group table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ObservationForm_Group] WITH (ROWLOCK) 
				WHERE
					[GroupId] = @GroupId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Group_GetByGroupId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ObservationForm_Group table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[GroupId],
					[GroupName],
					[LineNumber],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Group]
				WHERE
					[GroupId] = @GroupId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Group_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the ObservationForm_Group table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GroupName" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [GroupId]
	, [GroupName]
	, [LineNumber]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ObservationForm_Group]
    WHERE 
	 ([GroupId] = @GroupId OR @GroupId IS NULL)
	AND ([GroupName] = @GroupName OR @GroupName IS NULL)
	AND ([LineNumber] = @LineNumber OR @LineNumber IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [GroupId]
	, [GroupName]
	, [LineNumber]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ObservationForm_Group]
    WHERE 
	 ([GroupId] = @GroupId AND @GroupId is not null)
	OR ([GroupName] = @GroupName AND @GroupName is not null)
	OR ([LineNumber] = @LineNumber AND @LineNumber is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_ObservationForm_Group_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ObservationForm_Group table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [GroupId]
					, [GroupName]
					, [LineNumber]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[ObservationForm_Group] {0}
				)
				SELECT
				       [GroupId],
				       [GroupName],
				       [LineNumber],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ObservationForm_Group] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ObservationForm_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the ObservationForm table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[QuestionId],
					[GroupId],
					[QuestionRef],
					[QuestionName],
					[LineNumber],
					[Status],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ObservationForm_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ObservationForm table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[QuestionId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [QuestionId]'
				SET @SQL = @SQL + ', [GroupId]'
				SET @SQL = @SQL + ', [QuestionRef]'
				SET @SQL = @SQL + ', [QuestionName]'
				SET @SQL = @SQL + ', [LineNumber]'
				SET @SQL = @SQL + ', [Status]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[ObservationForm]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [QuestionId],'
				SET @SQL = @SQL + ' [GroupId],'
				SET @SQL = @SQL + ' [QuestionRef],'
				SET @SQL = @SQL + ' [QuestionName],'
				SET @SQL = @SQL + ' [LineNumber],'
				SET @SQL = @SQL + ' [Status],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ObservationForm]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_ObservationForm_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the ObservationForm table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionRef" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@QuestionName" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ObservationForm]
					(
					[GroupId]
					,[QuestionRef]
					,[QuestionName]
					,[LineNumber]
					,[Status]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@GroupId
					,@QuestionRef
					,@QuestionName
					,@LineNumber
					,@Status
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @QuestionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the ObservationForm table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionRef" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@QuestionName" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Status" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ObservationForm]
				SET
					[GroupId] = @GroupId
					,[QuestionRef] = @QuestionRef
					,[QuestionName] = @QuestionName
					,[LineNumber] = @LineNumber
					,[Status] = @Status
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[QuestionId] = @QuestionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the ObservationForm table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ObservationForm] WITH (ROWLOCK) 
				WHERE
					[QuestionId] = @QuestionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_GetByGroupId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ObservationForm table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[QuestionId],
					[GroupId],
					[QuestionRef],
					[QuestionName],
					[LineNumber],
					[Status],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm]
				WHERE
					[GroupId] = @GroupId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_GetByQuestionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ObservationForm table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[QuestionId],
					[GroupId],
					[QuestionRef],
					[QuestionName],
					[LineNumber],
					[Status],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm]
				WHERE
					[QuestionId] = @QuestionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the ObservationForm table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GroupId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionRef" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@QuestionName" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@LineNumber" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Status" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [QuestionId]
	, [GroupId]
	, [QuestionRef]
	, [QuestionName]
	, [LineNumber]
	, [Status]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ObservationForm]
    WHERE 
	 ([QuestionId] = @QuestionId OR @QuestionId IS NULL)
	AND ([GroupId] = @GroupId OR @GroupId IS NULL)
	AND ([QuestionRef] = @QuestionRef OR @QuestionRef IS NULL)
	AND ([QuestionName] = @QuestionName OR @QuestionName IS NULL)
	AND ([LineNumber] = @LineNumber OR @LineNumber IS NULL)
	AND ([Status] = @Status OR @Status IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [QuestionId]
	, [GroupId]
	, [QuestionRef]
	, [QuestionName]
	, [LineNumber]
	, [Status]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ObservationForm]
    WHERE 
	 ([QuestionId] = @QuestionId AND @QuestionId is not null)
	OR ([GroupId] = @GroupId AND @GroupId is not null)
	OR ([QuestionRef] = @QuestionRef AND @QuestionRef is not null)
	OR ([QuestionName] = @QuestionName AND @QuestionName is not null)
	OR ([LineNumber] = @LineNumber AND @LineNumber is not null)
	OR ([Status] = @Status AND @Status is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_ObservationForm_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ObservationForm table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [QuestionId]
					, [GroupId]
					, [QuestionRef]
					, [QuestionName]
					, [LineNumber]
					, [Status]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[ObservationForm] {0}
				)
				SELECT
				       [QuestionId],
				       [GroupId],
				       [QuestionRef],
				       [QuestionName],
				       [LineNumber],
				       [Status],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ObservationForm] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ObservationForm_Option_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the ObservationForm_Option table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[OptionId],
					[QuestionId],
					[OptionName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Option]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ObservationForm_Option_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ObservationForm_Option table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[OptionId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [OptionId]'
				SET @SQL = @SQL + ', [QuestionId]'
				SET @SQL = @SQL + ', [OptionName]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[ObservationForm_Option]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [OptionId],'
				SET @SQL = @SQL + ' [QuestionId],'
				SET @SQL = @SQL + ' [OptionName],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ObservationForm_Option]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_ObservationForm_Option_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the ObservationForm_Option table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionName" type="varchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ObservationForm_Option]
					(
					[QuestionId]
					,[OptionName]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@QuestionId
					,@OptionName
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @OptionId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Option_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the ObservationForm_Option table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionName" type="varchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ObservationForm_Option]
				SET
					[QuestionId] = @QuestionId
					,[OptionName] = @OptionName
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[OptionId] = @OptionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Option_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the ObservationForm_Option table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ObservationForm_Option] WITH (ROWLOCK) 
				WHERE
					[OptionId] = @OptionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Option_GetByQuestionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ObservationForm_Option table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OptionId],
					[QuestionId],
					[OptionName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Option]
				WHERE
					[QuestionId] = @QuestionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Option_GetByOptionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ObservationForm_Option table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OptionId],
					[QuestionId],
					[OptionName],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Option]
				WHERE
					[OptionId] = @OptionId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Option_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the ObservationForm_Option table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OptionName" type="varchar" direction="Input" size="300" precision="0" scale="0" param="(300)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OptionId]
	, [QuestionId]
	, [OptionName]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ObservationForm_Option]
    WHERE 
	 ([OptionId] = @OptionId OR @OptionId IS NULL)
	AND ([QuestionId] = @QuestionId OR @QuestionId IS NULL)
	AND ([OptionName] = @OptionName OR @OptionName IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OptionId]
	, [QuestionId]
	, [OptionName]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ObservationForm_Option]
    WHERE 
	 ([OptionId] = @OptionId AND @OptionId is not null)
	OR ([QuestionId] = @QuestionId AND @QuestionId is not null)
	OR ([OptionName] = @OptionName AND @OptionName is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_ObservationForm_Option_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ObservationForm_Option table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [OptionId]
					, [QuestionId]
					, [OptionName]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[ObservationForm_Option] {0}
				)
				SELECT
				       [OptionId],
				       [QuestionId],
				       [OptionName],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ObservationForm_Option] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ObservationForm_Answer_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the ObservationForm_Answer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Answer]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_ObservationForm_Answer_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ObservationForm_Answer table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[RowId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [RowId]'
				SET @SQL = @SQL + ', [ClientId]'
				SET @SQL = @SQL + ', [QuestionId]'
				SET @SQL = @SQL + ', [OptionId]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[ObservationForm_Answer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [RowId],'
				SET @SQL = @SQL + ' [ClientId],'
				SET @SQL = @SQL + ' [QuestionId],'
				SET @SQL = @SQL + ' [OptionId],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ObservationForm_Answer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_ObservationForm_Answer_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the ObservationForm_Answer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ObservationForm_Answer]
					(
					[ClientId]
					,[QuestionId]
					,[OptionId]
					,[Description]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@ClientId
					,@QuestionId
					,@OptionId
					,@Description
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @RowId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Answer_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the ObservationForm_Answer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ObservationForm_Answer]
				SET
					[ClientId] = @ClientId
					,[QuestionId] = @QuestionId
					,[OptionId] = @OptionId
					,[Description] = @Description
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[RowId] = @RowId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Answer_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the ObservationForm_Answer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ObservationForm_Answer] WITH (ROWLOCK) 
				WHERE
					[RowId] = @RowId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Answer_GetByClientId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ObservationForm_Answer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Answer]
				WHERE
					[ClientId] = @ClientId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Answer_GetByQuestionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ObservationForm_Answer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Answer]
				WHERE
					[QuestionId] = @QuestionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Answer_GetByOptionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ObservationForm_Answer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Answer]
				WHERE
					[OptionId] = @OptionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Answer_GetByRowId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the ObservationForm_Answer table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RowId],
					[ClientId],
					[QuestionId],
					[OptionId],
					[Description],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[ObservationForm_Answer]
				WHERE
					[RowId] = @RowId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_ObservationForm_Answer_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the ObservationForm_Answer table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RowId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ClientId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuestionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OptionId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [RowId]
	, [ClientId]
	, [QuestionId]
	, [OptionId]
	, [Description]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ObservationForm_Answer]
    WHERE 
	 ([RowId] = @RowId OR @RowId IS NULL)
	AND ([ClientId] = @ClientId OR @ClientId IS NULL)
	AND ([QuestionId] = @QuestionId OR @QuestionId IS NULL)
	AND ([OptionId] = @OptionId OR @OptionId IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [RowId]
	, [ClientId]
	, [QuestionId]
	, [OptionId]
	, [Description]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[ObservationForm_Answer]
    WHERE 
	 ([RowId] = @RowId AND @RowId is not null)
	OR ([ClientId] = @ClientId AND @ClientId is not null)
	OR ([QuestionId] = @QuestionId AND @QuestionId is not null)
	OR ([OptionId] = @OptionId AND @OptionId is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_ObservationForm_Answer_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ObservationForm_Answer table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [RowId]
					, [ClientId]
					, [QuestionId]
					, [OptionId]
					, [Description]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[ObservationForm_Answer] {0}
				)
				SELECT
				       [RowId],
				       [ClientId],
				       [QuestionId],
				       [OptionId],
				       [Description],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ObservationForm_Answer] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Wiscr_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the Wiscr table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[WiscrId],
					[SeanceId],
					[GeneralRawScore],
					[GeneralStandartScore],
					[SimilarityRawScore],
					[SimilarityStandartScore],
					[ArithmeticRawScore],
					[ArithmeticStandartScore],
					[WordRawScore],
					[WordStandartScore],
					[JudgingRawScore],
					[JudgingStandartScore],
					[SetOfNumbersRawScore],
					[SetOfNumbersStandartScore],
					[ImageDefineRawScore],
					[ImageDefineStandartScore],
					[ImageEditingRawScore],
					[ImageEditingStandartScore],
					[CubesPatternRawScore],
					[CubesPatternStandartScore],
					[PartsMergeRawScore],
					[PartsMergeStandartScore],
					[PasswordRawScore],
					[PasswordStandartScore],
					[MazesRawScore],
					[MazesStandartScore],
					[TotalVerbalScore],
					[TotalPerformanceScore],
					[TotalScore],
					[Notes],
					[TestDate],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Wiscr]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="sp_Wiscr_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Wiscr table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[WiscrId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [WiscrId]'
				SET @SQL = @SQL + ', [SeanceId]'
				SET @SQL = @SQL + ', [GeneralRawScore]'
				SET @SQL = @SQL + ', [GeneralStandartScore]'
				SET @SQL = @SQL + ', [SimilarityRawScore]'
				SET @SQL = @SQL + ', [SimilarityStandartScore]'
				SET @SQL = @SQL + ', [ArithmeticRawScore]'
				SET @SQL = @SQL + ', [ArithmeticStandartScore]'
				SET @SQL = @SQL + ', [WordRawScore]'
				SET @SQL = @SQL + ', [WordStandartScore]'
				SET @SQL = @SQL + ', [JudgingRawScore]'
				SET @SQL = @SQL + ', [JudgingStandartScore]'
				SET @SQL = @SQL + ', [SetOfNumbersRawScore]'
				SET @SQL = @SQL + ', [SetOfNumbersStandartScore]'
				SET @SQL = @SQL + ', [ImageDefineRawScore]'
				SET @SQL = @SQL + ', [ImageDefineStandartScore]'
				SET @SQL = @SQL + ', [ImageEditingRawScore]'
				SET @SQL = @SQL + ', [ImageEditingStandartScore]'
				SET @SQL = @SQL + ', [CubesPatternRawScore]'
				SET @SQL = @SQL + ', [CubesPatternStandartScore]'
				SET @SQL = @SQL + ', [PartsMergeRawScore]'
				SET @SQL = @SQL + ', [PartsMergeStandartScore]'
				SET @SQL = @SQL + ', [PasswordRawScore]'
				SET @SQL = @SQL + ', [PasswordStandartScore]'
				SET @SQL = @SQL + ', [MazesRawScore]'
				SET @SQL = @SQL + ', [MazesStandartScore]'
				SET @SQL = @SQL + ', [TotalVerbalScore]'
				SET @SQL = @SQL + ', [TotalPerformanceScore]'
				SET @SQL = @SQL + ', [TotalScore]'
				SET @SQL = @SQL + ', [Notes]'
				SET @SQL = @SQL + ', [TestDate]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [CreateUserId]'
				SET @SQL = @SQL + ', [UpdateUserId]'
				SET @SQL = @SQL + ', [Active]'
				SET @SQL = @SQL + ', [Deleted]'
				SET @SQL = @SQL + ' FROM [dbo].[Wiscr]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [WiscrId],'
				SET @SQL = @SQL + ' [SeanceId],'
				SET @SQL = @SQL + ' [GeneralRawScore],'
				SET @SQL = @SQL + ' [GeneralStandartScore],'
				SET @SQL = @SQL + ' [SimilarityRawScore],'
				SET @SQL = @SQL + ' [SimilarityStandartScore],'
				SET @SQL = @SQL + ' [ArithmeticRawScore],'
				SET @SQL = @SQL + ' [ArithmeticStandartScore],'
				SET @SQL = @SQL + ' [WordRawScore],'
				SET @SQL = @SQL + ' [WordStandartScore],'
				SET @SQL = @SQL + ' [JudgingRawScore],'
				SET @SQL = @SQL + ' [JudgingStandartScore],'
				SET @SQL = @SQL + ' [SetOfNumbersRawScore],'
				SET @SQL = @SQL + ' [SetOfNumbersStandartScore],'
				SET @SQL = @SQL + ' [ImageDefineRawScore],'
				SET @SQL = @SQL + ' [ImageDefineStandartScore],'
				SET @SQL = @SQL + ' [ImageEditingRawScore],'
				SET @SQL = @SQL + ' [ImageEditingStandartScore],'
				SET @SQL = @SQL + ' [CubesPatternRawScore],'
				SET @SQL = @SQL + ' [CubesPatternStandartScore],'
				SET @SQL = @SQL + ' [PartsMergeRawScore],'
				SET @SQL = @SQL + ' [PartsMergeStandartScore],'
				SET @SQL = @SQL + ' [PasswordRawScore],'
				SET @SQL = @SQL + ' [PasswordStandartScore],'
				SET @SQL = @SQL + ' [MazesRawScore],'
				SET @SQL = @SQL + ' [MazesStandartScore],'
				SET @SQL = @SQL + ' [TotalVerbalScore],'
				SET @SQL = @SQL + ' [TotalPerformanceScore],'
				SET @SQL = @SQL + ' [TotalScore],'
				SET @SQL = @SQL + ' [Notes],'
				SET @SQL = @SQL + ' [TestDate],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [CreateUserId],'
				SET @SQL = @SQL + ' [UpdateUserId],'
				SET @SQL = @SQL + ' [Active],'
				SET @SQL = @SQL + ' [Deleted]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Wiscr]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="sp_Wiscr_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Inserts a record into the Wiscr table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WiscrId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneralRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneralStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SimilarityRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SimilarityStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ArithmeticRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ArithmeticStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WordRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WordStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JudgingRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JudgingStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SetOfNumbersRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SetOfNumbersStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageDefineRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageDefineStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageEditingRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageEditingStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CubesPatternRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CubesPatternStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PartsMergeRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PartsMergeStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PasswordRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PasswordStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MazesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MazesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalVerbalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalPerformanceScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@TestDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Wiscr]
					(
					[SeanceId]
					,[GeneralRawScore]
					,[GeneralStandartScore]
					,[SimilarityRawScore]
					,[SimilarityStandartScore]
					,[ArithmeticRawScore]
					,[ArithmeticStandartScore]
					,[WordRawScore]
					,[WordStandartScore]
					,[JudgingRawScore]
					,[JudgingStandartScore]
					,[SetOfNumbersRawScore]
					,[SetOfNumbersStandartScore]
					,[ImageDefineRawScore]
					,[ImageDefineStandartScore]
					,[ImageEditingRawScore]
					,[ImageEditingStandartScore]
					,[CubesPatternRawScore]
					,[CubesPatternStandartScore]
					,[PartsMergeRawScore]
					,[PartsMergeStandartScore]
					,[PasswordRawScore]
					,[PasswordStandartScore]
					,[MazesRawScore]
					,[MazesStandartScore]
					,[TotalVerbalScore]
					,[TotalPerformanceScore]
					,[TotalScore]
					,[Notes]
					,[TestDate]
					,[CreateDate]
					,[UpdateDate]
					,[CreateUserId]
					,[UpdateUserId]
					,[Active]
					,[Deleted]
					)
				VALUES
					(
					@SeanceId
					,@GeneralRawScore
					,@GeneralStandartScore
					,@SimilarityRawScore
					,@SimilarityStandartScore
					,@ArithmeticRawScore
					,@ArithmeticStandartScore
					,@WordRawScore
					,@WordStandartScore
					,@JudgingRawScore
					,@JudgingStandartScore
					,@SetOfNumbersRawScore
					,@SetOfNumbersStandartScore
					,@ImageDefineRawScore
					,@ImageDefineStandartScore
					,@ImageEditingRawScore
					,@ImageEditingStandartScore
					,@CubesPatternRawScore
					,@CubesPatternStandartScore
					,@PartsMergeRawScore
					,@PartsMergeStandartScore
					,@PasswordRawScore
					,@PasswordStandartScore
					,@MazesRawScore
					,@MazesStandartScore
					,@TotalVerbalScore
					,@TotalPerformanceScore
					,@TotalScore
					,@Notes
					,@TestDate
					,@CreateDate
					,@UpdateDate
					,@CreateUserId
					,@UpdateUserId
					,@Active
					,@Deleted
					)
				-- Get the identity value
				SET @WiscrId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Wiscr_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Updates a record in the Wiscr table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WiscrId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneralRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GeneralStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SimilarityRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SimilarityStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ArithmeticRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ArithmeticStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WordRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WordStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JudgingRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@JudgingStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SetOfNumbersRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SetOfNumbersStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageDefineRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageDefineStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageEditingRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageEditingStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CubesPatternRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CubesPatternStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PartsMergeRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PartsMergeStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PasswordRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PasswordStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MazesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MazesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalVerbalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalPerformanceScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TotalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@TestDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Wiscr]
				SET
					[SeanceId] = @SeanceId
					,[GeneralRawScore] = @GeneralRawScore
					,[GeneralStandartScore] = @GeneralStandartScore
					,[SimilarityRawScore] = @SimilarityRawScore
					,[SimilarityStandartScore] = @SimilarityStandartScore
					,[ArithmeticRawScore] = @ArithmeticRawScore
					,[ArithmeticStandartScore] = @ArithmeticStandartScore
					,[WordRawScore] = @WordRawScore
					,[WordStandartScore] = @WordStandartScore
					,[JudgingRawScore] = @JudgingRawScore
					,[JudgingStandartScore] = @JudgingStandartScore
					,[SetOfNumbersRawScore] = @SetOfNumbersRawScore
					,[SetOfNumbersStandartScore] = @SetOfNumbersStandartScore
					,[ImageDefineRawScore] = @ImageDefineRawScore
					,[ImageDefineStandartScore] = @ImageDefineStandartScore
					,[ImageEditingRawScore] = @ImageEditingRawScore
					,[ImageEditingStandartScore] = @ImageEditingStandartScore
					,[CubesPatternRawScore] = @CubesPatternRawScore
					,[CubesPatternStandartScore] = @CubesPatternStandartScore
					,[PartsMergeRawScore] = @PartsMergeRawScore
					,[PartsMergeStandartScore] = @PartsMergeStandartScore
					,[PasswordRawScore] = @PasswordRawScore
					,[PasswordStandartScore] = @PasswordStandartScore
					,[MazesRawScore] = @MazesRawScore
					,[MazesStandartScore] = @MazesStandartScore
					,[TotalVerbalScore] = @TotalVerbalScore
					,[TotalPerformanceScore] = @TotalPerformanceScore
					,[TotalScore] = @TotalScore
					,[Notes] = @Notes
					,[TestDate] = @TestDate
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[CreateUserId] = @CreateUserId
					,[UpdateUserId] = @UpdateUserId
					,[Active] = @Active
					,[Deleted] = @Deleted
				WHERE
[WiscrId] = @WiscrId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Wiscr_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Deletes a record in the Wiscr table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WiscrId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Wiscr] WITH (ROWLOCK) 
				WHERE
					[WiscrId] = @WiscrId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="sp_Wiscr_GetByWiscrId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Select records from the Wiscr table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WiscrId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[WiscrId],
					[SeanceId],
					[GeneralRawScore],
					[GeneralStandartScore],
					[SimilarityRawScore],
					[SimilarityStandartScore],
					[ArithmeticRawScore],
					[ArithmeticStandartScore],
					[WordRawScore],
					[WordStandartScore],
					[JudgingRawScore],
					[JudgingStandartScore],
					[SetOfNumbersRawScore],
					[SetOfNumbersStandartScore],
					[ImageDefineRawScore],
					[ImageDefineStandartScore],
					[ImageEditingRawScore],
					[ImageEditingStandartScore],
					[CubesPatternRawScore],
					[CubesPatternStandartScore],
					[PartsMergeRawScore],
					[PartsMergeStandartScore],
					[PasswordRawScore],
					[PasswordStandartScore],
					[MazesRawScore],
					[MazesStandartScore],
					[TotalVerbalScore],
					[TotalPerformanceScore],
					[TotalScore],
					[Notes],
					[TestDate],
					[CreateDate],
					[UpdateDate],
					[CreateUserId],
					[UpdateUserId],
					[Active],
					[Deleted]
				FROM
					[dbo].[Wiscr]
				WHERE
					[WiscrId] = @WiscrId
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="sp_Wiscr_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Finds records in the Wiscr table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@WiscrId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SeanceId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeneralRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GeneralStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SimilarityRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SimilarityStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ArithmeticRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ArithmeticStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WordRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WordStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JudgingRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@JudgingStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SetOfNumbersRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SetOfNumbersStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageDefineRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageDefineStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageEditingRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageEditingStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CubesPatternRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CubesPatternStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PartsMergeRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PartsMergeStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PasswordRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PasswordStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MazesRawScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MazesStandartScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalVerbalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalPerformanceScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TotalScore" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Notes" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@TestDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUserId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Active" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Deleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [WiscrId]
	, [SeanceId]
	, [GeneralRawScore]
	, [GeneralStandartScore]
	, [SimilarityRawScore]
	, [SimilarityStandartScore]
	, [ArithmeticRawScore]
	, [ArithmeticStandartScore]
	, [WordRawScore]
	, [WordStandartScore]
	, [JudgingRawScore]
	, [JudgingStandartScore]
	, [SetOfNumbersRawScore]
	, [SetOfNumbersStandartScore]
	, [ImageDefineRawScore]
	, [ImageDefineStandartScore]
	, [ImageEditingRawScore]
	, [ImageEditingStandartScore]
	, [CubesPatternRawScore]
	, [CubesPatternStandartScore]
	, [PartsMergeRawScore]
	, [PartsMergeStandartScore]
	, [PasswordRawScore]
	, [PasswordStandartScore]
	, [MazesRawScore]
	, [MazesStandartScore]
	, [TotalVerbalScore]
	, [TotalPerformanceScore]
	, [TotalScore]
	, [Notes]
	, [TestDate]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Wiscr]
    WHERE 
	 ([WiscrId] = @WiscrId OR @WiscrId IS NULL)
	AND ([SeanceId] = @SeanceId OR @SeanceId IS NULL)
	AND ([GeneralRawScore] = @GeneralRawScore OR @GeneralRawScore IS NULL)
	AND ([GeneralStandartScore] = @GeneralStandartScore OR @GeneralStandartScore IS NULL)
	AND ([SimilarityRawScore] = @SimilarityRawScore OR @SimilarityRawScore IS NULL)
	AND ([SimilarityStandartScore] = @SimilarityStandartScore OR @SimilarityStandartScore IS NULL)
	AND ([ArithmeticRawScore] = @ArithmeticRawScore OR @ArithmeticRawScore IS NULL)
	AND ([ArithmeticStandartScore] = @ArithmeticStandartScore OR @ArithmeticStandartScore IS NULL)
	AND ([WordRawScore] = @WordRawScore OR @WordRawScore IS NULL)
	AND ([WordStandartScore] = @WordStandartScore OR @WordStandartScore IS NULL)
	AND ([JudgingRawScore] = @JudgingRawScore OR @JudgingRawScore IS NULL)
	AND ([JudgingStandartScore] = @JudgingStandartScore OR @JudgingStandartScore IS NULL)
	AND ([SetOfNumbersRawScore] = @SetOfNumbersRawScore OR @SetOfNumbersRawScore IS NULL)
	AND ([SetOfNumbersStandartScore] = @SetOfNumbersStandartScore OR @SetOfNumbersStandartScore IS NULL)
	AND ([ImageDefineRawScore] = @ImageDefineRawScore OR @ImageDefineRawScore IS NULL)
	AND ([ImageDefineStandartScore] = @ImageDefineStandartScore OR @ImageDefineStandartScore IS NULL)
	AND ([ImageEditingRawScore] = @ImageEditingRawScore OR @ImageEditingRawScore IS NULL)
	AND ([ImageEditingStandartScore] = @ImageEditingStandartScore OR @ImageEditingStandartScore IS NULL)
	AND ([CubesPatternRawScore] = @CubesPatternRawScore OR @CubesPatternRawScore IS NULL)
	AND ([CubesPatternStandartScore] = @CubesPatternStandartScore OR @CubesPatternStandartScore IS NULL)
	AND ([PartsMergeRawScore] = @PartsMergeRawScore OR @PartsMergeRawScore IS NULL)
	AND ([PartsMergeStandartScore] = @PartsMergeStandartScore OR @PartsMergeStandartScore IS NULL)
	AND ([PasswordRawScore] = @PasswordRawScore OR @PasswordRawScore IS NULL)
	AND ([PasswordStandartScore] = @PasswordStandartScore OR @PasswordStandartScore IS NULL)
	AND ([MazesRawScore] = @MazesRawScore OR @MazesRawScore IS NULL)
	AND ([MazesStandartScore] = @MazesStandartScore OR @MazesStandartScore IS NULL)
	AND ([TotalVerbalScore] = @TotalVerbalScore OR @TotalVerbalScore IS NULL)
	AND ([TotalPerformanceScore] = @TotalPerformanceScore OR @TotalPerformanceScore IS NULL)
	AND ([TotalScore] = @TotalScore OR @TotalScore IS NULL)
	AND ([Notes] = @Notes OR @Notes IS NULL)
	AND ([TestDate] = @TestDate OR @TestDate IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([CreateUserId] = @CreateUserId OR @CreateUserId IS NULL)
	AND ([UpdateUserId] = @UpdateUserId OR @UpdateUserId IS NULL)
	AND ([Active] = @Active OR @Active IS NULL)
	AND ([Deleted] = @Deleted OR @Deleted IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [WiscrId]
	, [SeanceId]
	, [GeneralRawScore]
	, [GeneralStandartScore]
	, [SimilarityRawScore]
	, [SimilarityStandartScore]
	, [ArithmeticRawScore]
	, [ArithmeticStandartScore]
	, [WordRawScore]
	, [WordStandartScore]
	, [JudgingRawScore]
	, [JudgingStandartScore]
	, [SetOfNumbersRawScore]
	, [SetOfNumbersStandartScore]
	, [ImageDefineRawScore]
	, [ImageDefineStandartScore]
	, [ImageEditingRawScore]
	, [ImageEditingStandartScore]
	, [CubesPatternRawScore]
	, [CubesPatternStandartScore]
	, [PartsMergeRawScore]
	, [PartsMergeStandartScore]
	, [PasswordRawScore]
	, [PasswordStandartScore]
	, [MazesRawScore]
	, [MazesStandartScore]
	, [TotalVerbalScore]
	, [TotalPerformanceScore]
	, [TotalScore]
	, [Notes]
	, [TestDate]
	, [CreateDate]
	, [UpdateDate]
	, [CreateUserId]
	, [UpdateUserId]
	, [Active]
	, [Deleted]
    FROM
	[dbo].[Wiscr]
    WHERE 
	 ([WiscrId] = @WiscrId AND @WiscrId is not null)
	OR ([SeanceId] = @SeanceId AND @SeanceId is not null)
	OR ([GeneralRawScore] = @GeneralRawScore AND @GeneralRawScore is not null)
	OR ([GeneralStandartScore] = @GeneralStandartScore AND @GeneralStandartScore is not null)
	OR ([SimilarityRawScore] = @SimilarityRawScore AND @SimilarityRawScore is not null)
	OR ([SimilarityStandartScore] = @SimilarityStandartScore AND @SimilarityStandartScore is not null)
	OR ([ArithmeticRawScore] = @ArithmeticRawScore AND @ArithmeticRawScore is not null)
	OR ([ArithmeticStandartScore] = @ArithmeticStandartScore AND @ArithmeticStandartScore is not null)
	OR ([WordRawScore] = @WordRawScore AND @WordRawScore is not null)
	OR ([WordStandartScore] = @WordStandartScore AND @WordStandartScore is not null)
	OR ([JudgingRawScore] = @JudgingRawScore AND @JudgingRawScore is not null)
	OR ([JudgingStandartScore] = @JudgingStandartScore AND @JudgingStandartScore is not null)
	OR ([SetOfNumbersRawScore] = @SetOfNumbersRawScore AND @SetOfNumbersRawScore is not null)
	OR ([SetOfNumbersStandartScore] = @SetOfNumbersStandartScore AND @SetOfNumbersStandartScore is not null)
	OR ([ImageDefineRawScore] = @ImageDefineRawScore AND @ImageDefineRawScore is not null)
	OR ([ImageDefineStandartScore] = @ImageDefineStandartScore AND @ImageDefineStandartScore is not null)
	OR ([ImageEditingRawScore] = @ImageEditingRawScore AND @ImageEditingRawScore is not null)
	OR ([ImageEditingStandartScore] = @ImageEditingStandartScore AND @ImageEditingStandartScore is not null)
	OR ([CubesPatternRawScore] = @CubesPatternRawScore AND @CubesPatternRawScore is not null)
	OR ([CubesPatternStandartScore] = @CubesPatternStandartScore AND @CubesPatternStandartScore is not null)
	OR ([PartsMergeRawScore] = @PartsMergeRawScore AND @PartsMergeRawScore is not null)
	OR ([PartsMergeStandartScore] = @PartsMergeStandartScore AND @PartsMergeStandartScore is not null)
	OR ([PasswordRawScore] = @PasswordRawScore AND @PasswordRawScore is not null)
	OR ([PasswordStandartScore] = @PasswordStandartScore AND @PasswordStandartScore is not null)
	OR ([MazesRawScore] = @MazesRawScore AND @MazesRawScore is not null)
	OR ([MazesStandartScore] = @MazesStandartScore AND @MazesStandartScore is not null)
	OR ([TotalVerbalScore] = @TotalVerbalScore AND @TotalVerbalScore is not null)
	OR ([TotalPerformanceScore] = @TotalPerformanceScore AND @TotalPerformanceScore is not null)
	OR ([TotalScore] = @TotalScore AND @TotalScore is not null)
	OR ([Notes] = @Notes AND @Notes is not null)
	OR ([TestDate] = @TestDate AND @TestDate is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([CreateUserId] = @CreateUserId AND @CreateUserId is not null)
	OR ([UpdateUserId] = @UpdateUserId AND @UpdateUserId is not null)
	OR ([Active] = @Active AND @Active is not null)
	OR ([Deleted] = @Deleted AND @Deleted is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="sp_Wiscr_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the Wiscr table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [WiscrId]
					, [SeanceId]
					, [GeneralRawScore]
					, [GeneralStandartScore]
					, [SimilarityRawScore]
					, [SimilarityStandartScore]
					, [ArithmeticRawScore]
					, [ArithmeticStandartScore]
					, [WordRawScore]
					, [WordStandartScore]
					, [JudgingRawScore]
					, [JudgingStandartScore]
					, [SetOfNumbersRawScore]
					, [SetOfNumbersStandartScore]
					, [ImageDefineRawScore]
					, [ImageDefineStandartScore]
					, [ImageEditingRawScore]
					, [ImageEditingStandartScore]
					, [CubesPatternRawScore]
					, [CubesPatternStandartScore]
					, [PartsMergeRawScore]
					, [PartsMergeStandartScore]
					, [PasswordRawScore]
					, [PasswordStandartScore]
					, [MazesRawScore]
					, [MazesStandartScore]
					, [TotalVerbalScore]
					, [TotalPerformanceScore]
					, [TotalScore]
					, [Notes]
					, [TestDate]
					, [CreateDate]
					, [UpdateDate]
					, [CreateUserId]
					, [UpdateUserId]
					, [Active]
					, [Deleted]
					FROM [dbo].[Wiscr] {0}
				)
				SELECT
				       [WiscrId],
				       [SeanceId],
				       [GeneralRawScore],
				       [GeneralStandartScore],
				       [SimilarityRawScore],
				       [SimilarityStandartScore],
				       [ArithmeticRawScore],
				       [ArithmeticStandartScore],
				       [WordRawScore],
				       [WordStandartScore],
				       [JudgingRawScore],
				       [JudgingStandartScore],
				       [SetOfNumbersRawScore],
				       [SetOfNumbersStandartScore],
				       [ImageDefineRawScore],
				       [ImageDefineStandartScore],
				       [ImageEditingRawScore],
				       [ImageEditingStandartScore],
				       [CubesPatternRawScore],
				       [CubesPatternStandartScore],
				       [PartsMergeRawScore],
				       [PartsMergeStandartScore],
				       [PasswordRawScore],
				       [PasswordStandartScore],
				       [MazesRawScore],
				       [MazesStandartScore],
				       [TotalVerbalScore],
				       [TotalPerformanceScore],
				       [TotalScore],
				       [Notes],
				       [TestDate],
				       [CreateDate],
				       [UpdateDate],
				       [CreateUserId],
				       [UpdateUserId],
				       [Active],
				       [Deleted]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Wiscr] {0};
				
				END
			]]></body>
		</procedure>
		
            <procedure owner="dbo" name="sp_ProvinceView_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets all records from the ProvinceView view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [Id],
                        [RowNumber],
                        [AdminId],
                        [ObjectId],
                        [ParentId],
                        [PlateCode],
                        [AreaId],
                        [PhoneCode],
                        [ProvinceName],
                        [Longitude],
                        [Latitude],
                        [Type],
                        [CreateDate],
                        [CreateTime],
                        [UpdateDate],
                        [UpdateTime],
                        [CreateUserId],
                        [UpdateUserId],
                        [Active],
                        [Deleted],
                        [AreaName]
                    FROM
                        [dbo].[ProvinceView]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="sp_ProvinceView_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ProvinceView view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[Id]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [Id]'
                    SET @SQL = @SQL + ', [RowNumber]'
                    SET @SQL = @SQL + ', [AdminId]'
                    SET @SQL = @SQL + ', [ObjectId]'
                    SET @SQL = @SQL + ', [ParentId]'
                    SET @SQL = @SQL + ', [PlateCode]'
                    SET @SQL = @SQL + ', [AreaId]'
                    SET @SQL = @SQL + ', [PhoneCode]'
                    SET @SQL = @SQL + ', [ProvinceName]'
                    SET @SQL = @SQL + ', [Longitude]'
                    SET @SQL = @SQL + ', [Latitude]'
                    SET @SQL = @SQL + ', [Type]'
                    SET @SQL = @SQL + ', [CreateDate]'
                    SET @SQL = @SQL + ', [CreateTime]'
                    SET @SQL = @SQL + ', [UpdateDate]'
                    SET @SQL = @SQL + ', [UpdateTime]'
                    SET @SQL = @SQL + ', [CreateUserId]'
                    SET @SQL = @SQL + ', [UpdateUserId]'
                    SET @SQL = @SQL + ', [Active]'
                    SET @SQL = @SQL + ', [Deleted]'
                    SET @SQL = @SQL + ', [AreaName]'
                    SET @SQL = @SQL + ' FROM [dbo].[ProvinceView]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [Id],'
                    SET @SQL = @SQL + ' [RowNumber],'
                    SET @SQL = @SQL + ' [AdminId],'
                    SET @SQL = @SQL + ' [ObjectId],'
                    SET @SQL = @SQL + ' [ParentId],'
                    SET @SQL = @SQL + ' [PlateCode],'
                    SET @SQL = @SQL + ' [AreaId],'
                    SET @SQL = @SQL + ' [PhoneCode],'
                    SET @SQL = @SQL + ' [ProvinceName],'
                    SET @SQL = @SQL + ' [Longitude],'
                    SET @SQL = @SQL + ' [Latitude],'
                    SET @SQL = @SQL + ' [Type],'
                    SET @SQL = @SQL + ' [CreateDate],'
                    SET @SQL = @SQL + ' [CreateTime],'
                    SET @SQL = @SQL + ' [UpdateDate],'
                    SET @SQL = @SQL + ' [UpdateTime],'
                    SET @SQL = @SQL + ' [CreateUserId],'
                    SET @SQL = @SQL + ' [UpdateUserId],'
                    SET @SQL = @SQL + ' [Active],'
                    SET @SQL = @SQL + ' [Deleted],'
                    SET @SQL = @SQL + ' [AreaName]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[ProvinceView]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="sp_ProvinceView_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: 1 Şubat 2019 Cuma

-- Created By:  ()
-- Purpose: Gets records from the ProvinceView table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [Id]
                        , [RowNumber]
                        , [AdminId]
                        , [ObjectId]
                        , [ParentId]
                        , [PlateCode]
                        , [AreaId]
                        , [PhoneCode]
                        , [ProvinceName]
                        , [Longitude]
                        , [Latitude]
                        , [Type]
                        , [CreateDate]
                        , [CreateTime]
                        , [UpdateDate]
                        , [UpdateTime]
                        , [CreateUserId]
                        , [UpdateUserId]
                        , [Active]
                        , [Deleted]
                        , [AreaName]
                        FROM [dbo].[ProvinceView] {0}
                    )
                    SELECT
                        [Id],
                        [RowNumber],
                        [AdminId],
                        [ObjectId],
                        [ParentId],
                        [PlateCode],
                        [AreaId],
                        [PhoneCode],
                        [ProvinceName],
                        [Longitude],
                        [Latitude],
                        [Type],
                        [CreateDate],
                        [CreateTime],
                        [UpdateDate],
                        [UpdateTime],
                        [CreateUserId],
                        [UpdateUserId],
                        [Active],
                        [Deleted],
                        [AreaName]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ProvinceView] {0};
                    
                    END
                ]]></body>
            </procedure>
            
</procedures>
</root>
