using System;
using System.ComponentModel;

namespace Ekip.Framework.Entities
{
	/// <summary>
	///		The data structure representation of the 'Wiscr' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IWiscr 
	{
		/// <summary>			
		/// WiscrId : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "Wiscr"</remarks>
		System.Int32 WiscrId { get; set; }
				
		
		
		/// <summary>
		/// SeanceId : 
		/// </summary>
		System.Int32?  SeanceId  { get; set; }
		
		/// <summary>
		/// GeneralRawScore : 
		/// </summary>
		System.Int32?  GeneralRawScore  { get; set; }
		
		/// <summary>
		/// GeneralStandartScore : 
		/// </summary>
		System.Int32?  GeneralStandartScore  { get; set; }
		
		/// <summary>
		/// SimilarityRawScore : 
		/// </summary>
		System.Int32?  SimilarityRawScore  { get; set; }
		
		/// <summary>
		/// SimilarityStandartScore : 
		/// </summary>
		System.Int32?  SimilarityStandartScore  { get; set; }
		
		/// <summary>
		/// ArithmeticRawScore : 
		/// </summary>
		System.Int32?  ArithmeticRawScore  { get; set; }
		
		/// <summary>
		/// ArithmeticStandartScore : 
		/// </summary>
		System.Int32?  ArithmeticStandartScore  { get; set; }
		
		/// <summary>
		/// WordRawScore : 
		/// </summary>
		System.Int32?  WordRawScore  { get; set; }
		
		/// <summary>
		/// WordStandartScore : 
		/// </summary>
		System.Int32?  WordStandartScore  { get; set; }
		
		/// <summary>
		/// JudgingRawScore : 
		/// </summary>
		System.Int32?  JudgingRawScore  { get; set; }
		
		/// <summary>
		/// JudgingStandartScore : 
		/// </summary>
		System.Int32?  JudgingStandartScore  { get; set; }
		
		/// <summary>
		/// SetOfNumbersRawScore : 
		/// </summary>
		System.Int32?  SetOfNumbersRawScore  { get; set; }
		
		/// <summary>
		/// SetOfNumbersStandartScore : 
		/// </summary>
		System.Int32?  SetOfNumbersStandartScore  { get; set; }
		
		/// <summary>
		/// ImageDefineRawScore : 
		/// </summary>
		System.Int32?  ImageDefineRawScore  { get; set; }
		
		/// <summary>
		/// ImageDefineStandartScore : 
		/// </summary>
		System.Int32?  ImageDefineStandartScore  { get; set; }
		
		/// <summary>
		/// ImageEditingRawScore : 
		/// </summary>
		System.Int32?  ImageEditingRawScore  { get; set; }
		
		/// <summary>
		/// ImageEditingStandartScore : 
		/// </summary>
		System.Int32?  ImageEditingStandartScore  { get; set; }
		
		/// <summary>
		/// CubesPatternRawScore : 
		/// </summary>
		System.Int32?  CubesPatternRawScore  { get; set; }
		
		/// <summary>
		/// CubesPatternStandartScore : 
		/// </summary>
		System.Int32?  CubesPatternStandartScore  { get; set; }
		
		/// <summary>
		/// PartsMergeRawScore : 
		/// </summary>
		System.Int32?  PartsMergeRawScore  { get; set; }
		
		/// <summary>
		/// PartsMergeStandartScore : 
		/// </summary>
		System.Int32?  PartsMergeStandartScore  { get; set; }
		
		/// <summary>
		/// PasswordRawScore : 
		/// </summary>
		System.Int32?  PasswordRawScore  { get; set; }
		
		/// <summary>
		/// PasswordStandartScore : 
		/// </summary>
		System.Int32?  PasswordStandartScore  { get; set; }
		
		/// <summary>
		/// MazesRawScore : 
		/// </summary>
		System.Int32?  MazesRawScore  { get; set; }
		
		/// <summary>
		/// MazesStandartScore : 
		/// </summary>
		System.Int32?  MazesStandartScore  { get; set; }
		
		/// <summary>
		/// TotalVerbalScore : 
		/// </summary>
		System.Int32?  TotalVerbalScore  { get; set; }
		
		/// <summary>
		/// TotalPerformanceScore : 
		/// </summary>
		System.Int32?  TotalPerformanceScore  { get; set; }
		
		/// <summary>
		/// TotalScore : 
		/// </summary>
		System.Int32?  TotalScore  { get; set; }
		
		/// <summary>
		/// Notes : 
		/// </summary>
		System.String  Notes  { get; set; }
		
		/// <summary>
		/// TestDate : 
		/// </summary>
		System.DateTime  TestDate  { get; set; }
		
		/// <summary>
		/// CreateDate : 
		/// </summary>
		System.DateTime  CreateDate  { get; set; }
		
		/// <summary>
		/// UpdateDate : 
		/// </summary>
		System.DateTime?  UpdateDate  { get; set; }
		
		/// <summary>
		/// CreateUserId : 
		/// </summary>
		System.Int32  CreateUserId  { get; set; }
		
		/// <summary>
		/// UpdateUserId : 
		/// </summary>
		System.Int32?  UpdateUserId  { get; set; }
		
		/// <summary>
		/// Active : 
		/// </summary>
		System.Boolean  Active  { get; set; }
		
		/// <summary>
		/// Deleted : 
		/// </summary>
		System.Boolean  Deleted  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties

		#endregion Data Properties

	}
}


