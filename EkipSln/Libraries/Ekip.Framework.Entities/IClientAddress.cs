using System;
using System.ComponentModel;

namespace Ekip.Framework.Entities
{
	/// <summary>
	///		The data structure representation of the 'ClientAddress' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IClientAddress 
	{
		/// <summary>			
		/// AddressId : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ClientAddress"</remarks>
		System.Int32 AddressId { get; set; }
				
		
		
		/// <summary>
		/// TitleId : 
		/// </summary>
		System.Byte?  TitleId  { get; set; }
		
		/// <summary>
		/// AddressLine : 
		/// </summary>
		System.String  AddressLine  { get; set; }
		
		/// <summary>
		/// ProvinceId : 
		/// </summary>
		System.Int32?  ProvinceId  { get; set; }
		
		/// <summary>
		/// TownId : 
		/// </summary>
		System.Int32?  TownId  { get; set; }
		
		/// <summary>
		/// NeighborhoodId : 
		/// </summary>
		System.Int32?  NeighborhoodId  { get; set; }
		
		/// <summary>
		/// StreetId : 
		/// </summary>
		System.Int32?  StreetId  { get; set; }
		
		/// <summary>
		/// Phone1 : 
		/// </summary>
		System.String  Phone1  { get; set; }
		
		/// <summary>
		/// Phone2 : 
		/// </summary>
		System.String  Phone2  { get; set; }
		
		/// <summary>
		/// Mobile : 
		/// </summary>
		System.String  Mobile  { get; set; }
		
		/// <summary>
		/// CreateDate : 
		/// </summary>
		System.DateTime  CreateDate  { get; set; }
		
		/// <summary>
		/// UpdateDate : 
		/// </summary>
		System.DateTime?  UpdateDate  { get; set; }
		
		/// <summary>
		/// CreateUserId : 
		/// </summary>
		System.Int32  CreateUserId  { get; set; }
		
		/// <summary>
		/// UpdateUserId : 
		/// </summary>
		System.Int32?  UpdateUserId  { get; set; }
		
		/// <summary>
		/// Active : 
		/// </summary>
		System.Boolean  Active  { get; set; }
		
		/// <summary>
		/// Deleted : 
		/// </summary>
		System.Boolean  Deleted  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _clientAddressId
		/// </summary>	
		TList<Client> ClientCollection {  get;  set;}	

		#endregion Data Properties

	}
}


