<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTM5jWRgMAAABbSURBVDhP
        pYwBCsAwCAP7Wv//A4cDCzNXtrDAIb1GV2b+AqUDSgeUDipeIn0RkIjYH9IXcUgfkf4UXaxJzP7jcYtD
        armm9EVAerki/SlcUDqgdEDpgNIB5XdyXUc4hcqAW0hrAAAAAElFTkSuQmCC
</value>
  </data>
</root>