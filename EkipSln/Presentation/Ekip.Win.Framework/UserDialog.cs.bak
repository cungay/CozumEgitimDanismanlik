using System;
using System.Collections.Generic;
using System.Windows.Forms;
using Ekip.Framework.Core.Resources;
//using TaskDialogApi;

namespace Ekip.Win.Framework
{
    public class UserDialog
    {
        public static void SaveFailure(Control parent)
        {
            WarningMessage(parent, Messages.Save_Failure);
        }

        public static void SaveFailure(Control parent, string details)
        {
            WarningMessage(parent, Messages.Save_Failure, details);
        }

        //public static void LongImageSize(Control parent)
        //{
        //    WarningMessage(parent, SystemMessages.LongImageSize);
        //}

        public static DialogResult Confirm(Control parent, string message, string details = null)
        {
            //TaskDialog dlg = new TaskDialog();
            //dlg.WindowTitle = Messages.Confirm_DetaultTitle;
            //dlg.Content = message.Replace("\\n", System.Environment.NewLine);
            //dlg.MainIcon = TaskDialogIcon.Shield;
            //if (details != null)
            //{
            //    dlg.ExpandedInformation = details;
            //    dlg.ExpandedByDefault = false;
            //    dlg.ExpandFooterArea = false;
            //    dlg.ExpandedControlText = "Detayları gizle";
            //    dlg.CollapsedControlText = "Detayları göster";
            //}
            //List<TaskDialogButton> buttons = new List<TaskDialogButton>();
            //buttons.Add(new TaskDialogButton(Convert.ToInt32(DialogResult.Yes), Messages.DialogResult_Yes));
            //buttons.Add(new TaskDialogButton(Convert.ToInt32(DialogResult.No), Messages.DialogResult_No));
            //dlg.Buttons = buttons.ToArray();
            //return (DialogResult)dlg.Show(parent);
            return DialogResult.Yes;
        }

        /// <summary>
        /// Save question user dialog
        /// </summary>
        /// <param name="parent">Active Form</param>
        /// <returns>0='Kaydet',1='Kaydetme'</returns>
        public static int SaveConfirm(Control parent, string caption)
        {
            //TaskDialog dlg = new TaskDialog();
            //dlg.WindowTitle = caption;
            //dlg.Content = Messages.Confirm_Save;
            //dlg.MainIcon = TaskDialogIcon.Information;
            //List<TaskDialogButton> buttons = new List<TaskDialogButton>();
            //buttons.Add(new TaskDialogButton(0, "Kaydet"));
            //buttons.Add(new TaskDialogButton(1, "Kaydetme"));
            //dlg.Buttons = buttons.ToArray();
            //return dlg.Show(parent);
            return 0;
        }

        public static int SaveConfirm(Control parent)
        {
            return SaveConfirm(parent, Messages.Default_Title);
        }

        public static void WarningMessage(Control parent, string message)
        {
            WarningMessage(parent, message, null);
        }

        public static void WarningMessage(Control parent, string message, string details)
        {
            //TaskDialog dlg = new TaskDialog();
            //dlg.WindowTitle = Messages.Default_Title;
            //dlg.Content = message;
            //dlg.MainIcon = TaskDialogIcon.Warning;
            //if (details != null)
            //{
            //    dlg.ExpandedInformation = details;
            //    dlg.ExpandedByDefault = true;
            //    dlg.ExpandFooterArea = false;
            //}
            //dlg.Show(parent);
        }

        public static void WarningMessage(string caption, string message, string details)
        {
            //TaskDialog dlg = new TaskDialog();
            //dlg.WindowTitle = caption;
            //dlg.Content = message;
            //dlg.MainIcon = TaskDialogIcon.Warning;
            //if (details != null)
            //{
            //    dlg.ExpandedInformation = details;
            //    dlg.ExpandedByDefault = true;
            //    dlg.ExpandFooterArea = false;
            //}
            //dlg.Show();
        }

        public static void InfoMessage(Control parent, string message)
        {
            InfoMessage(parent, message, null);
        }

        public static void InfoMessage(Control parent, string message, string details)
        {
            //TaskDialog dlg = new TaskDialog();
            //dlg.WindowTitle = Messages.Default_Title;
            //dlg.Content = message;
            //dlg.MainIcon = TaskDialogIcon.Information;
            //if (details != null)
            //{
            //    dlg.ExpandedInformation = details;
            //    dlg.ExpandedByDefault = false;
            //    dlg.ExpandFooterArea = false;
            //    dlg.ExpandedControlText = "Detayları gizle";
            //    dlg.CollapsedControlText = "Detayları göster";
            //}
            //dlg.Show(parent);
        }

        public static void ErrorMessage(Control parent, string caption, string details)
        {
            //TaskDialog dlg = new TaskDialog();

            //if (caption == null)
            //{
            //    dlg.WindowTitle = Messages.Default_Title;
            //}
            //else
            //{
            //    dlg.WindowTitle = caption;
            //}

            //dlg.Content = Messages.Opreration_Failed;
            //dlg.MainIcon = TaskDialogIcon.Error;
            //if (details != null)
            //{
            //    dlg.ExpandedInformation = details;
            //    dlg.ExpandedByDefault = true;
            //    dlg.ExpandFooterArea = false;
            //}
            //dlg.Show(parent);
        }

        public static void ErrorMessage(Control parent, string caption)
        {
            ErrorMessage(parent, caption, null);
        }

        public static void ErrorMessage(Control parent)
        {
            ErrorMessage(parent, null, null);
        }

        #region Custom Dialog

        public static void RefreshFile(Control parent, int fileNumber)
        {
            var message = string.Format(Messages.Refresh_File, fileNumber);
            var details = "Son Yenileme Zamanı";
            details += System.Environment.NewLine;
            details += "Tarih: " + DateTime.Now.Date.ToString("dd.MM.yyyy");
            details += System.Environment.NewLine;
            details += "Saat: " + DateTime.Now.ToLongTimeString();
            InfoMessage(parent, message, details);
        }

        public static void RecordNotFound(Control parent)
        {
            InfoMessage(parent, Messages.Record_NotFound);
        }

        public static void FileNotFound(Control parent, int fileNumber)
        {
            var message = string.Format(Messages.File_NotFound, fileNumber);
            InfoMessage(parent, message, Messages.File_NotFound_Details);
        }

        public static DialogResult FileChanged(Control parent, int fileNumber)
        {
            var message = string.Format(Messages.File_Changed_Confirm, fileNumber);
            return Confirm(parent, message, Messages.File_Changed_Confirm_Info);
        }

        public static void OperationCanceled(Control parent)
        {
            InfoMessage(parent, Messages.Operation_Canceled);
        }

        #endregion
    }
}
